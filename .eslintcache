[{"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/index.js":"1","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/reportWebVitals.js":"2","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/App.js":"3","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/AddPatientData/AddPatientData.js":"4","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ethereum/web3.js":"5","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/viewToDoctor/viewToDoctor.js":"6","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ethereum/Admin.js":"7","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/UserReg/UserReg.js":"8","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/HeaderPatients.js":"9","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/PatientSide/AccesstoDoctor/AccesstoDoctor.js":"10","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/HeaderAdmin.js":"11","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/HeaderDoctor.js":"12","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/ViewData/ViewData.js":"13","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Footer/Footer.js":"14","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/Login/Login.js":"15","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/History/history.js":"16","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/PatientRegisteration/PatientRegisteration.js":"17","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/DoctorRegisteration/DoctorRegisteration.js":"18","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/contact/contactus.js":"19","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/PatientSide/PatientFullDetail/FullDetail.js":"20","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/Header.js":"21","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Eth/Ethutil.js":"22","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ipfs.js":"23"},{"size":633,"mtime":1618989432552,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1618989455467,"results":"26","hashOfConfig":"25"},{"size":3062,"mtime":1624778617573,"results":"27","hashOfConfig":"25"},{"size":10605,"mtime":1624804413561,"results":"28","hashOfConfig":"25"},{"size":488,"mtime":1619876826975,"results":"29","hashOfConfig":"25"},{"size":5245,"mtime":1620452408687,"results":"30","hashOfConfig":"25"},{"size":171,"mtime":1619854080522,"results":"31","hashOfConfig":"25"},{"size":817,"mtime":1619854080566,"results":"32","hashOfConfig":"25"},{"size":1155,"mtime":1620452408671,"results":"33","hashOfConfig":"25"},{"size":10769,"mtime":1624809201278,"results":"34","hashOfConfig":"25"},{"size":1181,"mtime":1624780387163,"results":"35","hashOfConfig":"25"},{"size":1152,"mtime":1620220131257,"results":"36","hashOfConfig":"25"},{"size":6774,"mtime":1624809794492,"results":"37","hashOfConfig":"25"},{"size":1379,"mtime":1619488816734,"results":"38","hashOfConfig":"25"},{"size":2164,"mtime":1624778617701,"results":"39","hashOfConfig":"25"},{"size":7243,"mtime":1624778617697,"results":"40","hashOfConfig":"25"},{"size":6863,"mtime":1624808765314,"results":"41","hashOfConfig":"25"},{"size":7620,"mtime":1624808979450,"results":"42","hashOfConfig":"25"},{"size":3841,"mtime":1624778617701,"results":"43","hashOfConfig":"25"},{"size":6685,"mtime":1624806876144,"results":"44","hashOfConfig":"25"},{"size":1212,"mtime":1624778617613,"results":"45","hashOfConfig":"25"},{"size":2270,"mtime":1624805314369,"results":"46","hashOfConfig":"25"},{"size":137,"mtime":1619947369620,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"lxknxq",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/index.js",[],["101","102"],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/reportWebVitals.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/App.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/AddPatientData/AddPatientData.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ethereum/web3.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/viewToDoctor/viewToDoctor.js",["103"],"import React, { Component } from 'react'\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport { Paper } from '@material-ui/core';\nimport { FaUser, FaAddressCard, FaNotesMedical } from 'react-icons/fa'\nimport './viewToDoctor.css'\nimport web3 from '../../../ethereum/web3'\nimport Admin from '../../../ethereum/Admin'\nimport { Modal, Button } from 'react-bootstrap'\n\nimport {\n\tconnectToPatients,\n\tconnectToDoctor,\n\taddToPatients,\n\tpatientDetails,\n} from '../../Eth/Ethutil'\n\n\n\nclass viewToDoctor extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\taccount: '',\n\t\t\tnme: '',\n\t\t\tmno: '',\n\t\t\tbg: '',\n\t\t\trecord: [],\n\t\t\tfinalObj: [],\n\t\t\tshow: false,\n\t\t\turl:''\n\t\t}\n\n\n\n\t\tthis.handleClose = this.handleClose.bind(this);\n\t\tthis.handleShow = this.handleShow.bind(this);\n\t}\n\n\thandleClose = () => this.setState({ show: false })\n\thandleShow = (event,hash) => {\n\t\tevent.preventDefault()\n\t\tconst url = 'https://ipfs.io/ipfs/'+ hash\n\t\tthis.setState({ show: true , url})}\n\n\tasync componentDidMount() {\n\t\tconst accounts = await web3.eth.getAccounts();\n        const pId = this.props.location.myCustomProps.value\n\t\t\n\t\tconst pExist = await Admin.methods.existP(pId).call()\n\t\tif (!pExist) {\n\t\t\talert(\"Patients does not exist on this address\");\n\t\t}\n\t\telse {\n\t\t\tconst pAddr = await addToPatients(pId)\n\t\t\tconst { nme, mno, bg } = await patientDetails(pAddr)\n\n\t\t\tconst patient = await connectToPatients(pAddr)\n\t\t\t\n\t\t\tconst len = await patient.methods.getLength().call({\n\t\t\t\tfrom: accounts[0]\n\t\t\t})\n\n\t\t\tlet record = []\n\n\t\t\tfor (let i = 0; i < len; i++) {\n\n\t\t\t\tconst temp = await patient.methods.getReport(i).call({\n\t\t\t\t\tfrom: accounts[0]\n\t\t\t\t})\n\t\t\t\tlet obj = {\n\t\t\t\t\tdate: temp[0],\n\t\t\t\t\tdoctor: temp[1],\n\t\t\t\t\tdetail: temp[2],\n\t\t\t\t\thash: temp[3]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trecord.push(obj)\n\n\t\t\t}\n\n\n\t\t\tlet temp = []\n\t\t\t\n\t\t\tfor (let i = 0; i < len; i++) {\n\n\t\t\t\tconst doctor = await connectToDoctor(record[i].doctor);\n\n\t\t\t\tconst dId = await doctor.methods.owner().call();\n\n\t\t\t\tconst dName = await doctor.methods.name().call();\n\n\t\t\t\tconst date = this.uToTime(record[i].date)\n\n\t\t\t\tconst obj = {\n\t\t\t\t\tdName,\n\t\t\t\t\tdId,\n\t\t\t\t\tdate,\n\t\t\t\t\tdetails: record[i].detail,\n\t\t\t\t\thash:record[i].hash,\n\t\t\t\t}\n\t\t\t\t  temp =  [...temp, obj]\n\t\t\t\t\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tnme,\n\t\t\t\tmno,\n\t\t\t\tbg,\n\t\t\t\taccount: accounts[0],\n\t\t\t\trecord,\n\t\t\t\tfinalObj: temp\n\t\t\t})\n\n\n\t\t}\n\t}\n\n\tuToTime(t) {\n\t\tconst milliseconds = t * 1000\n\t\tconst dateObject = new Date(milliseconds)\n\t\tconst humanDateFormat = dateObject.toLocaleString()\n\t\tconst arr = humanDateFormat.split(',')\n\t\treturn arr[0]\n\t}\n\n\ttoHtm(){\n\t\t\n\t}\n\n\trender() {\n\t\tconst paperstyle = {\n\t\t\tpadding: '8px 5px',\n\t\t\ttextAlign: 'center',\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"stages-main\">\n\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t\t<div class=\"card-counter primary\">\n\t\t\t\t\t\t\t\t<FaUser className='fa-icons' />\n\t\t\t\t\t\t\t\t<span class=\"count-name\">{this.state.nme}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t\t<div class=\"card-counter success\">\n\t\t\t\t\t\t\t\t<FaAddressCard className='fa-icons' />\n\t\t\t\t\t\t\t\t<span class=\"count-name\">{this.state.mno}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t\t<div class=\"card-counter danger\">\n\t\t\t\t\t\t\t\t<FaNotesMedical className='fa-icons' />\n\t\t\t\t\t\t\t\t<span class=\"count-name\">{this.state.bg}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"stages\">\n\t\t\t\t\t\t<Timeline align=\"alternate\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.state.finalObj.map((rec,index) =>{\n\t\t\t\t\t\t\t\t\t\tconsole.log(rec);\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<TimelineItem key ={index}>\n\t\t\t\t\t\t\t\t\t\t\t<TimelineSeparator>\n\t\t\t\t\t\t\t\t\t\t\t\t<TimelineDot color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<TimelineConnector />\n\t\t\t\t\t\t\t\t\t\t\t</TimelineSeparator>\n\t\t\t\t\t\t\t\t\t\t\t<TimelineContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<Paper elevation={3} style={paperstyle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tDate : {rec.date} <br />\n\t\t\t\t\t\t\t\t\t\t\t\t\tDetails: {rec.details} <br />\n\t\t\t\t\t\t\t\t\t\t\t\t\tDoctor: {rec.dName} <br />\n\t\t\t\t\t\t\t\t\t\t\t\t\tDoctor ID : {rec.dId} <br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={(event) => this.handleShow(event,rec.hash)} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tView Document\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t</TimelineContent>\n\t\t\t\t\t\t\t\t\t\t</TimelineItem>\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Modal show={this.state.show} onHide={this.handleClose} size='lg'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Title>PRESCRIPTION</Modal.Title>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe src={this.state.url} style={{ width: '500%', height: '500px' }} className='img-fluid' frameBorder=\"0\"></iframe>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={this.handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t\t\t\t\t </Button>\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t</Timeline>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default viewToDoctor;","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ethereum/Admin.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/UserReg/UserReg.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/HeaderPatients.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/PatientSide/AccesstoDoctor/AccesstoDoctor.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/HeaderAdmin.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/HeaderDoctor.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/ViewData/ViewData.js",["104","105","106","107"],"import React, { Component } from 'react'\nimport { FaUser, FaAddressCard, FaNotesMedical, FaKey } from 'react-icons/fa'\nimport './viewdata.css'\nimport web3 from '../../../ethereum/web3'\nimport Admin from '../../../ethereum/Admin'\nimport {\n    patientDetails,\n    rwAccess\n} from '../../Eth/Ethutil'\nimport { TiTick } from 'react-icons/ti'\nimport { ImCross } from 'react-icons/im'\nimport { Modal, Button } from 'react-bootstrap'\n\n\nclass ViewData extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            mno: '',\n            bg: '',\n            r: <ImCross />,\n            rw: <ImCross />,\n            show: false,\n            url:''\n        }\n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n\n    }\n\n    async componentDidMount() {\n        console.log(this.props.location.myCustomProps\n        );\n        const { nme, mno, bg } = await patientDetails(this.props.location.myCustomProps.patient)\n        const { read, write } = await rwAccess(this.props.location.myCustomProps.pId, this.props.location.myCustomProps.dAddr)\n\n\n        if (read === true) {\n            this.setState({ r: <TiTick size=\"2em\" /> })\n        }\n        if (write === true) {\n            this.setState({ rw: <TiTick size=\"2em\" /> })\n        }\n        const url = 'https://ipfs.io/ipfs/' + this.props.location.myCustomProps.hash\n\n        this.setState({\n            mno,\n            bg,\n            url\n\n        })\n\n\n    }\n\n    handleClose = () => this.setState({ show: false })\n    handleShow = () => this.setState({ show: true })\n\n    render() {\n        return (\n            <div className=\"viewdata\">\n                <div className=\"\">\n                    <h1>View Patient's Data</h1>\n                    <div className=\"patient-cards\">\n\n                        <div class=\"ui cards\">\n                            <div className=\"card\">\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4 detail-1\"><FaUser size='4em' color='white' className=\"faicons\" /></div>\n                                        <div className=\"col-8 card-content\">\n                                            <h2>{this.props.location.myCustomProps.pName}</h2>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card\">\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4 detail-2\"><FaAddressCard size='4em' color='white' className=\"faicons\" /></div>\n                                        <div className=\"col-8 card-content\">\n                                            <h4>{this.state.mno}</h4>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card\">\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4 detail-3\"><FaNotesMedical size='4em' color='white' className=\"faicons\" /></div>\n                                        <div className=\"col-8 card-content\"><h4>Blood Group : {this.state.bg}</h4></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card\">\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-4 access-1\">\n                                            <FaKey size='4em' color='white' className=\"faicons\" />\n                                        </div>\n                                        <div className=\"col-8 access-2\">\n                                            <div className=\"row\">\n                                                <div className=\"read-write\">\n                                                    Read &nbsp; {this.state.r} <br />\n                                                         Write &nbsp; {this.state.rw}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"displayform\">\n                    <div className=\"container\">\n                        <div>\n\n                            <h4>Details</h4>\n                            <p><h5>Remark:</h5>  {this.props.location.myCustomProps.details}\n                            </p>\n                            <p><h5>Date:</h5>  {this.props.location.myCustomProps.date}\n                            </p>\n                            <h4>Patient blockchain address</h4>\n                            <p>{this.props.location.myCustomProps.pId}</p>\n\n                            <div>\n                                <h4>File</h4>\n                                <Button variant=\"primary\" onClick={this.handleShow}>\n                                   SHOW PRESCRIPTION\n                                    </Button>\n\n\n                                <Modal show={this.state.show} onHide={this.handleClose} size = 'lg'>\n                                    <Modal.Header closeButton>\n                                        <Modal.Title>PRESCRIPTION</Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body>\n                                    <iframe src= {this.state.url} style={{width:'500%' ,height:'500px'}} className = 'img-fluid'frameBorder=\"0\"></iframe>\n                                    </Modal.Body>\n                                    <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                         </Button>\n                                       \n                                    </Modal.Footer>\n                                </Modal>\n\n\n\n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </div >\n\n        )\n    }\n}\n\nexport default ViewData;\n","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Footer/Footer.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/Login/Login.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/History/history.js",["108","109","110"],"import React, { Component } from 'react'\nimport { FaUserMd,FaAddressCard,FaNotesMedical, FaUsers } from 'react-icons/fa'\nimport './history.css'\nimport {Link} from 'react-router-dom'\nimport web3 from '../../../ethereum/web3'\nimport {connectToPatients,\n    connectToDoctor,\n    addToDoctor,\n    doctorDetails,\n  } from '../../Eth/Ethutil' ;\n  import Admin from '../../../ethereum/Admin'\n  import { Container, Row, Col } from 'react-bootstrap';\n\n\nclass History extends Component {\n    state = {\n        name:'',\n        mno:'',\n        id:'',\n        len:0,\n        record:[],\n        finalObj:[],\n        account:''\n    }\n    async componentDidMount(){\n        const accounts = await web3.eth.getAccounts();\n        const dExist = await Admin.methods.existD(accounts[0]).call()\n        if(!dExist){\n        alert(\"Doctor does not exist on this address\");\n        }else{\n        const dAddr = await addToDoctor(accounts[0]);\n        const {nme,mno,id,len} =  await doctorDetails(dAddr)\n        let record = []\n        const doctor = await connectToDoctor(dAddr) \n        this.setState({account:accounts[0]})\n\n\n        for(let i=0;i<len;i++){\n            let temp = await doctor.methods.pRecord(i).call()\n           let obj = {\n               date:temp[0],\n               details:temp[2],\n               hash:temp[3],\n               patient:temp[1]\n           }\n           record.push(obj)\n           //console.log(obj);\n        }\n        console.log(record);\n        this.setState({\n            name:nme,\n            mno,\n            id,\n            len,\n            record\n        })\n\n        for(let i=0; i < this.state.record.length; i++){\n            console.log(1);\n            const patient = await connectToPatients(this.state.record[i].patient);\n            console.log(2);\n            const pId = await patient.methods.owner().call();\n            console.log(3);\n            const pName = await patient.methods.name().call();\n            console.log(4);\n            const date = this.uToTime(this.state.record[i].date)\n            console.log(5);\n            const obj = {\n                pName,\n                pId,\n                date,\n                patient:this.state.record[i].patient,\n                details:this.state.record[i].details,\n                hash:this.state.record[i].hash,\n            }\n            console.log(6);\n            const temp = [...this.state.finalObj, obj]\n            console.log(7);\n            this.setState({\n                finalObj:temp\n            })\n        }\n        console.log(8);\n        console.log(this.state.finalObj);\n    }\n    }\n\n   uToTime(t){\n    const milliseconds = t * 1000 \n    const dateObject = new Date(milliseconds)\n    const humanDateFormat = dateObject.toLocaleString()\n       const arr = humanDateFormat.split(',')\n       return arr[0]\n   }\n   \n\n    render() {\n        return (\n            <div className=\"history-main\">\n            <h1 className=\"greet-doc\">Welcome back !!!</h1>\n            <div class=\"ui cards\">\n              <div className=\"card doc-card\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-4 doc-detail-1\"><FaUserMd size='4em' color='white' className=\"faicons\"/></div>\n                            <div className=\"col-8 doc-card-content\">\n                                <h2>{this.state.name}</h2>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card doc-card\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-4 doc-detail-2\"><FaAddressCard size='4em' color='white' className=\"faicons\"/></div>\n                            <div className=\"col-8 doc-card-content\">\n                                <h4>{this.state.mno}</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card doc-card\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-4 doc-detail-3\"><FaNotesMedical size='4em' color='white' className=\"faicons\"/></div>\n                            <div className=\"col-8 doc-card-content\">\n                            <h4>ID: {this.state.id}</h4></div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card doc-card\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-4 doc-detail-4\"><FaUsers size='4em' color='white' className=\"faicons\"/></div>\n                            <div className=\"col-8 doc-card-content\">\n                            <h4>Total Patient : {this.state.len}</h4></div>\n                        </div>\n                    </div>\n                </div>\n            </div> \n\n\n                <div className=\"col-lg-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                    <h2 className=\"card-title\">\n                        <span>\n                        <h1>History</h1>\n                        </span>\n                    </h2>\n                    <div className=\"table-responsive\">\n                        <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                            <th> User ID </th>\n                            <th> Name </th>\n                            <th> Date</th>\n                            <th> Details</th>\n                            <th>  View </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                           {\n                                this.state.finalObj.reverse().map((rec, index) =>{\n                                  return(\n                                 <tr>\n                                 <td>{rec.pId}</td>\n                                 <td>{rec.pName}</td>\n                                 <td>{rec.date}</td>\n                                 <td>{rec.details}</td>\n                                 <td>\n                                     <Link to={\n                                                    { \n                                                        pathname: \"/viewdata\",\n                                                        myCustomProps: {...rec, dAddr:this.state.account}\n                                                    }\n                                                }>\n                                     <input type=\"submit\" value='View' className=\"btn-history\"/>\n                                     </Link>\n                                 </td>\n                                 </tr>\n                                )\n                            })\n\n                           }\n                        </tbody>\n                        </table>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default History;","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/PatientRegisteration/PatientRegisteration.js",["111"],"import React from 'react'\nimport './patientregisteration.css'\nimport { Form, Input, Button,Message,Container } from 'semantic-ui-react'\nimport web3 from '../../../ethereum/web3'\nimport Admin from '../../../ethereum/Admin'\n\nclass PatientRegisteration extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:false,\n      errorMessage:'',\n      hidden:true,\n      name: \"\",\n      selectBloodgrp: \"\",\n      dob: \"\",\n      email: \"\",\n      mobno: \"\",\n      adharno: \"\",\n      blockchainaddress: \"\",\n      address: \"\",\n      zip: \"\",\n      state: \"\",\n      country: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleDropdownChange(e) {\n    this.setState({\n      selectBloodgrp: e.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({loading:true})\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n\n    const patient = await Admin.methods.addPatient(\n      this.state.name,\n      this.state.dob,\n      this.state.adharno,\n      this.state.selectBloodgrp,\n      this.state.mobno,\n      this.state.blockchainaddress,\n    ).send({\n      from: accounts[0]\n    })\n    this.setState({\n      name: \"\",\n      selectBloodgrp: \"\",\n      dob: \"\",\n      email: \"\",\n      mobno: \"\",\n      adharno: \"\",\n      blockchainaddress: \"\",\n      address: \"\",\n      zip: \"\",\n      state: \"\",\n      country: \"\",\n    });\n\n      \n    } catch (error) {\n      this.setState({errorMessage: error.message, hidden:false});\n      \n    }\n  this.setState({loading:false})\n  }\n\n  isFormValid = () => {\n    const {\n      name,\n     selectBloodgrp,\n     dob,\n     email,\n     mobno ,\n     adharno,\n     blockchainaddress,\n     address ,\n     zip,\n     state,\n     country,\n     } =  this.state\n  \n     console.log(\"in button\");\n    return name && selectBloodgrp && dob && email && mobno && adharno && blockchainaddress && address && zip && state && country\n   }\n\n\n  render() {\n    return (\n      <div className=\"main-reg-form-pat\">\n        <Form className=\"reg-form-pat\" action='' onSubmit={this.handleSubmit}>\n          <h2>Patient Registration</h2>\n          <hr />\n          <Form>\n            <Form.Field\n              id='form-input-control-name'\n              name=\"name\"\n              control={Input}\n              label='Name'\n              placeholder='Full Name'\n              value={this.state.name}\n              onChange={this.handleChange}\n              required\n            />\n          </Form>\n          <Form.Group width='equals'>\n            <label className='fieldcss'>\n              Blood Group\n            <select required id=\"dropdown-2\" onChange={this.handleDropdownChange}>\n                <option value=\"N/A\">N/A</option>\n                <option value=\"A+\">A+</option>\n                <option value=\"A-\">A-</option>\n                <option value=\"B+\">B+</option>\n                <option value=\"B-\">B-</option>\n                <option value=\"AB+\">AB+</option>\n                <option value=\"AB-\">AB-</option>\n                <option value=\"O+\">O+</option>\n                <option value=\"O-\">O-</option>\n              </select>\n            </label>\n            &nbsp;&nbsp;&nbsp;\n            <div className=\"fieldcss\">\n              <label>Date of Birth\n            <input\n                  id='dob'\n                  name=\"dob\"\n                  type=\"date\"\n                  placeholder='dd-mm-yyyy'\n                  value={this.state.dob}\n                  onChange={this.handleChange} />\n              </label>\n            </div>\n          </Form.Group>\n          <Form.Field\n            id='form-input-control-error-email'\n            name=\"email\"\n            control={Input}\n            label='Email'\n            placeholder='joe@example.com'\n            value={this.state.email}\n            onChange={this.handleChange}\n            width={10}\n            required\n          />\n          <Form.Field\n            id='mobno'\n            name='mobno'\n            control={Input}\n            label='Mobile no.'\n            placeholder='Mobile no.'\n            value={this.state.mobno}\n            onChange={this.handleChange}\n            required\n            width={10}\n          />\n          <Form.Field\n            id='adharno'\n            name='adharno'\n            control={Input}\n            label='Adhar no.'\n            placeholder='Adhar no.'\n            value={this.state.adharno}\n            onChange={this.handleChange}\n            required\n            width={10}\n          />\n          <Form.Field\n            id='blockchainaddress'\n            name='blockchainaddress'\n            control={Input}\n            label='Blockchain Address'\n            placeholder='Blockchain Address'\n            value={this.state.blockchainaddress}\n            onChange={this.handleChange}\n            required\n            width={10}\n          />\n\n          <Form.Field\n            id='address'\n            name='address'\n            control={Input}\n            label='Address'\n            placeholder='Address'\n            value={this.state.address}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Group>\n            <Form.Field\n              id='Zip Code'\n              name='zip'\n              control={Input}\n              label='Zip Code'\n              placeholder='Zip Code'\n              value={this.state.zip}\n              onChange={this.handleChange}\n              required\n            />\n            <Form.Field\n              id='state'\n              name='state'\n              control={Input}\n              label='State'\n              placeholder='State'\n              value={this.state.state}\n              onChange={this.handleChange}\n              required\n            />\n            <Form.Field\n              id='Country'\n              name='country'\n              control={Input}\n              label='Country'\n              placeholder='Country'\n              value={this.state.country}\n              onChange={this.handleChange}\n              required\n            />\n          </Form.Group>\n          <br />\n          <div style={{textAlign:\"center\"}}>\n          <Button primary onClick = {this.handleSubmit}  disabled={!this.isFormValid()} loading ={this.state.loading} > Submit</Button>\n          </div>\n        </Form>\n        <Container style={{textAlign:\"center\", marginTop:'20px'}}>\n        <Message error header=\"Oops!\" content={this.state.errorMessage} hidden = {this.state.hidden}  negetive compact/>\n     </Container>\n      </div>\n    )\n  }\n}\nexport default PatientRegisteration;","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/DoctorRegisteration/DoctorRegisteration.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/contact/contactus.js",["112","113","114"],"import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './contactus.css'\nimport contact from './../../assets/ab2.jpeg'\n\nexport default function ContactPage() {\n    return (\n            <div class=\"contact3 py-5\">\n  <div class=\"row no-gutters\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <div class=\"card-shadow\">\n            <img src={contact} class=\"img-fluid\" alt=\"contact-img\"/>\n          </div>\n        </div>\n        <div class=\"col-lg-6\">\n          <div class=\"contact-box ml-3\">\n            <h1 class=\"font-weight-light mt-2\">Quick Contact</h1>\n            <form class=\"mt-4\">\n              <div class=\"row\">\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group mt-2\">\n                    <input class=\"form-control\" type=\"text\" placeholder=\"name\" />\n                  </div>\n                </div>\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group mt-2\">\n                    <input class=\"form-control\" type=\"email\" placeholder=\"email address\" />\n                  </div>\n                </div>\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group mt-2\">\n                    <input class=\"form-control\" type=\"text\" placeholder=\"phone\" />\n                  </div>\n                </div>\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group mt-2\">\n                    <textarea class=\"form-control\" rows=\"3\" placeholder=\"message\"></textarea>\n                  </div>\n                </div>\n                <div class=\"col-lg-12\">\n                  <button type=\"submit\" class=\"btn btn-danger-gradiant mt-3 text-white border-0 px-3 py-2\"><span> SUBMIT</span></button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-12\">\n          <div class=\"card mt-4 border-0 mb-4\">\n            <div class=\"row\">\n              <div class=\"col-lg-4 col-md-4\">\n                <div class=\"card-body d-flex align-items-center c-detail pl-0\">\n                  <div class=\"mr-3 align-self-center\">\n                    <img src=\"https://www.wrappixel.com/demos/ui-kit/wrapkit/assets/images/contact/icon1.png\"/>\n                  </div>\n                  <div class=\"\">\n                    <h6 class=\"font-weight-medium\">Address</h6>\n                    <p class=\"\">601 Sherwood Ave.\n                      <br/> San Bernandino</p>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-4 col-md-4\">\n                <div class=\"card-body d-flex align-items-center c-detail\">\n                  <div class=\"mr-3 align-self-center\">\n                    <img src=\"https://www.wrappixel.com/demos/ui-kit/wrapkit/assets/images/contact/icon2.png\" />\n                  </div>\n                  <div class=\"\">\n                    <h6 class=\"font-weight-medium\">Phone</h6>\n                    <p class=\"\">251 546 9442\n                      <br /> 630 446 8851</p>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-4 col-md-4\">\n                <div class=\"card-body d-flex align-items-center c-detail\">\n                  <div class=\"mr-3 align-self-center\">\n                    <img src=\"https://www.wrappixel.com/demos/ui-kit/wrapkit/assets/images/contact/icon3.png\" />\n                  </div>\n                  <div class=\"\">\n                    <h6 class=\"font-weight-medium\">Email</h6>\n                    <p class=\"\">\n                      info@wrappixel.com\n                      <br /> 123@wrappixel.com\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n    )\n}","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/PatientSide/PatientFullDetail/FullDetail.js",["115"],"import React, { Component } from 'react'\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport { Paper } from '@material-ui/core';\nimport { FaUser,FaAddressCard,FaNotesMedical, FaBirthdayCake } from 'react-icons/fa'\nimport './patienthistory.css'\nimport web3 from '../../../../ethereum/web3'\nimport Admin from '../../../../ethereum/Admin'\nimport { Modal, Button } from 'react-bootstrap'\n\nimport {\n\tconnectToPatients,\n\tconnectToDoctor,\n\taddToPatients,\n\tpatientDetails,\n} from '../../../Eth/Ethutil'\n\n\n\nclass FullDetails extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\taccount: '',\n\t\t\tnme: '',\n\t\t\tmno: '',\n\t\t\tbg: '',\n\t\t\trecord: [],\n\t\t\tfinalObj: [],\n\t\t\tshow: false,\n\t\t\turl:''\n\t\t}\n\n\n\n\t\tthis.handleClose = this.handleClose.bind(this);\n\t\tthis.handleShow = this.handleShow.bind(this);\n\t}\n\n\thandleClose = () => this.setState({ show: false })\n\thandleShow = (event,hash) => {\n\t\tevent.preventDefault()\n\t\tconst url = 'https://ipfs.io/ipfs/'+ hash\n\t\tthis.setState({ show: true , url})}\n\n\tasync componentDidMount() {\n\t\tconst accounts = await web3.eth.getAccounts();\n\t\t\n\t\tconst pExist = await Admin.methods.existP(accounts[0]).call()\n\t\tif (!pExist) {\n\t\t\talert(\"Patients does not exist on this address\");\n\t\t}\n\t\telse {\n\t\t\tconst pAddr = await addToPatients(accounts[0])\n\t\t\tconst { nme, mno, bg,age } = await patientDetails(pAddr)\n\n\t\t\tconst patient = await connectToPatients(pAddr)\n\t\t\t\n\t\t\tconst len = await patient.methods.getLength().call({\n\t\t\t\tfrom: accounts[0]\n\t\t\t})\n\n\t\t\tlet record = []\n\n\t\t\tfor (let i = 0; i < len; i++) {\n\n\t\t\t\tconst temp = await patient.methods.getReport(i).call({\n\t\t\t\t\tfrom: accounts[0]\n\t\t\t\t})\n\t\t\t\tlet obj = {\n\t\t\t\t\tdate: temp[0],\n\t\t\t\t\tdoctor: temp[1],\n\t\t\t\t\tdetail: temp[2],\n\t\t\t\t\thash: temp[3]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trecord.push(obj)\n\n\t\t\t}\n\n\n\t\t\tlet temp = []\n\t\t\t\n\t\t\tfor (let i = 0; i < len; i++) {\n\n\t\t\t\tconst doctor = await connectToDoctor(record[i].doctor);\n\n\t\t\t\tconst dId = await doctor.methods.owner().call();\n\n\t\t\t\tconst dName = await doctor.methods.name().call();\n\n\t\t\t\tconst date = this.uToTime(record[i].date)\n\n\t\t\t\tconst obj = {\n\t\t\t\t\tdName,\n\t\t\t\t\tdId,\n\t\t\t\t\tdate,\n\t\t\t\t\tdetails: record[i].detail,\n\t\t\t\t\thash:record[i].hash,\n\t\t\t\t}\n\t\t\t\t  temp =  [...temp, obj]\n\t\t\t\t\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tnme,\n\t\t\t\tmno,\n\t\t\t\tbg,\n\t\t\t\taccount: accounts[0],\n\t\t\t\trecord,\n\t\t\t\tfinalObj: temp,\n\t\t\t\tage\n\t\t\t})\n\n\n\t\t}\n\t}\n\n\tuToTime(t) {\n\t\tconst milliseconds = t * 1000\n\t\tconst dateObject = new Date(milliseconds)\n\t\tconst humanDateFormat = dateObject.toLocaleString()\n\t\tconst arr = humanDateFormat.split(',')\n\t\treturn arr[0]\n\t}\n\n\ttoHtm(){\n\t\t\n\t}\n\n\trender() {\n\t\tconst paperstyle = {\n\t\t\tpadding: '8px 5px',\n\t\t\ttextAlign: 'center',\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"stages-main\">\n\n<div class=\"ui cards container-fluid\" >\n\n              <div className=\"card doc-card mr-3\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-4 doc-detail-1\"><FaUser size='4em' color='white' className=\"faicons\"/></div>\n                            <div className=\"col-8 doc-card-content\">\n                                <h2>{this.state.nme}</h2>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card doc-card\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-4 doc-detail-2\"><FaAddressCard size='4em' color='white' className=\"faicons\"/></div>\n                            <div className=\"col-8 doc-card-content\">\n                                <h4>{this.state.mno}</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\t\t\t\t<div className=\"card doc-card\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-4 doc-detail-4\"><FaBirthdayCake size='4em' color='white' className=\"faicons\"/></div>\n                            <div className=\"col-8 doc-card-content\">\n                                <h4>{this.state.age}</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card doc-card\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-4 doc-detail-3\"><FaNotesMedical size='4em' color='white' className=\"faicons\"/></div>\n                            <div className=\"col-8 doc-card-content\">\n                            <h4>Blood Group: {this.state.bg}</h4></div>\n                        </div>\n                    </div>\n                </div>\n\t\t\t</div>\n\t\t\t\n                \n\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div className=\"stages\">\n\t\t\t\t\t\t<Timeline align=\"alternate\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.state.finalObj.reverse().map((rec,index) =>{\n\t\t\t\t\t\t\t\t\t\tconsole.log(rec);\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<TimelineItem key ={index}>\n\t\t\t\t\t\t\t\t\t\t\t<TimelineSeparator>\n\t\t\t\t\t\t\t\t\t\t\t\t<TimelineDot color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<TimelineConnector />\n\t\t\t\t\t\t\t\t\t\t\t</TimelineSeparator>\n\t\t\t\t\t\t\t\t\t\t\t<TimelineContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<Paper elevation={3} style={paperstyle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tDate : {rec.date} <br />\n\t\t\t\t\t\t\t\t\t\t\t\t\tDetails: {rec.details} <br />\n\t\t\t\t\t\t\t\t\t\t\t\t\tDoctor: {rec.dName} <br />\n\t\t\t\t\t\t\t\t\t\t\t\t\tDoctor ID : {rec.dId} <br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={(event) => this.handleShow(event,rec.hash)} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tView Document\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t</TimelineContent>\n\t\t\t\t\t\t\t\t\t\t</TimelineItem>\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Modal show={this.state.show} onHide={this.handleClose} size='lg'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Title>PRESCRIPTION</Modal.Title>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe src={this.state.url} style={{ width: '500%', height: '500px' }} className='img-fluid' frameBorder=\"0\"></iframe>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={this.handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t\t\t\t\t </Button>\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t</Timeline>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default FullDetails;","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/Header.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Eth/Ethutil.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ipfs.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":203,"column":16,"nodeType":"122","endLine":203,"endColumn":126},{"ruleId":"123","severity":1,"message":"124","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":12},{"ruleId":"123","severity":1,"message":"127","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":13},{"ruleId":"123","severity":1,"message":"128","line":35,"column":17,"nodeType":"125","messageId":"126","endLine":35,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":142,"column":37,"nodeType":"122","endLine":142,"endColumn":145},{"ruleId":"123","severity":1,"message":"129","line":12,"column":12,"nodeType":"125","messageId":"126","endLine":12,"endColumn":21},{"ruleId":"123","severity":1,"message":"130","line":12,"column":23,"nodeType":"125","messageId":"126","endLine":12,"endColumn":26},{"ruleId":"123","severity":1,"message":"131","line":12,"column":28,"nodeType":"125","messageId":"126","endLine":12,"endColumn":31},{"ruleId":"123","severity":1,"message":"132","line":56,"column":11,"nodeType":"125","messageId":"126","endLine":56,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":55,"column":21,"nodeType":"122","endLine":55,"endColumn":112},{"ruleId":"133","severity":1,"message":"134","line":67,"column":21,"nodeType":"122","endLine":67,"endColumn":113},{"ruleId":"133","severity":1,"message":"134","line":79,"column":21,"nodeType":"122","endLine":79,"endColumn":113},{"ruleId":"120","severity":1,"message":"121","line":224,"column":16,"nodeType":"122","endLine":224,"endColumn":126},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'web3' is defined but never used.","Identifier","unusedVar","'Admin' is defined but never used.","'nme' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'patient' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]