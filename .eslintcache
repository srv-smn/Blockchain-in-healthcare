[{"E:\\PPM3\\Blockchain-in-healthcare\\src\\index.js":"1","E:\\PPM3\\Blockchain-in-healthcare\\src\\App.js":"2","E:\\PPM3\\Blockchain-in-healthcare\\src\\reportWebVitals.js":"3","E:\\PPM3\\Blockchain-in-healthcare\\src\\ethereum\\Admin.js":"4","E:\\PPM3\\Blockchain-in-healthcare\\src\\ethereum\\web3.js":"5","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\UserReg\\UserReg.js":"6","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\History\\history.js":"7","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\DoctorRegisteration\\DoctorRegisteration.js":"8","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientRegisteration\\PatientRegisteration.js":"9","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\Login\\Login.js":"10","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\ViewData\\ViewData.js":"11","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\viewToDoctor\\viewToDoctor.js":"12","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\AddPatientData\\AddPatientData.js":"13","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\Header.js":"14","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Footer\\Footer.js":"15","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\AccesstoDoctor\\AccesstoDoctor.js":"16","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\PatientFullDetail\\FullDetail.js":"17","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderPatients.js":"18","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderDoctor.js":"19","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderAdmin.js":"20","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Eth\\Ethutil.js":"21","E:\\PPM3\\Blockchain-in-healthcare\\src\\ipfs.js":"22"},{"size":655,"mtime":1620150264382,"results":"23","hashOfConfig":"24"},{"size":2983,"mtime":1620203821528,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1620150264382,"results":"26","hashOfConfig":"24"},{"size":179,"mtime":1620184785666,"results":"27","hashOfConfig":"24"},{"size":488,"mtime":1620184785666,"results":"28","hashOfConfig":"24"},{"size":850,"mtime":1620184785674,"results":"29","hashOfConfig":"24"},{"size":7383,"mtime":1620396752109,"results":"30","hashOfConfig":"24"},{"size":7715,"mtime":1620208252142,"results":"31","hashOfConfig":"24"},{"size":6922,"mtime":1620358022407,"results":"32","hashOfConfig":"24"},{"size":1542,"mtime":1620184785670,"results":"33","hashOfConfig":"24"},{"size":6942,"mtime":1620357927511,"results":"34","hashOfConfig":"24"},{"size":5466,"mtime":1620397721087,"results":"35","hashOfConfig":"24"},{"size":10846,"mtime":1620357986785,"results":"36","hashOfConfig":"24"},{"size":1220,"mtime":1620208947300,"results":"37","hashOfConfig":"24"},{"size":1416,"mtime":1620204148825,"results":"38","hashOfConfig":"24"},{"size":10990,"mtime":1620357963856,"results":"39","hashOfConfig":"24"},{"size":5447,"mtime":1620397768606,"results":"40","hashOfConfig":"24"},{"size":1201,"mtime":1620313911167,"results":"41","hashOfConfig":"24"},{"size":1196,"mtime":1620208928693,"results":"42","hashOfConfig":"24"},{"size":1222,"mtime":1620209029774,"results":"43","hashOfConfig":"24"},{"size":2230,"mtime":1620184785674,"results":"44","hashOfConfig":"24"},{"size":140,"mtime":1620184785666,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"17avjo3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"E:\\PPM3\\Blockchain-in-healthcare\\src\\index.js",[],["93","94"],"E:\\PPM3\\Blockchain-in-healthcare\\src\\App.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\reportWebVitals.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\ethereum\\Admin.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\ethereum\\web3.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\UserReg\\UserReg.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\History\\history.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\DoctorRegisteration\\DoctorRegisteration.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientRegisteration\\PatientRegisteration.js",["95"],"import React from 'react'\r\nimport './patientregisteration.css'\r\nimport { Form, Input, Button,Message } from 'semantic-ui-react'\r\nimport web3 from '../../../ethereum/web3'\r\nimport Admin from '../../../ethereum/Admin'\r\n\r\nclass PatientRegisteration extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading:false,\r\n      errorMessage:'',\r\n      hidden:true,\r\n      name: \"\",\r\n      selectBloodgrp: \"\",\r\n      dob: \"\",\r\n      email: \"\",\r\n      mobno: \"\",\r\n      adharno: \"\",\r\n      blockchainaddress: \"\",\r\n      address: \"\",\r\n      zip: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDropdownChange(e) {\r\n    this.setState({\r\n      selectBloodgrp: e.target.value,\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({loading:true})\r\n\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n    const patient = await Admin.methods.addPatient(\r\n      this.state.name,\r\n      this.state.adharno,\r\n      this.state.selectBloodgrp,\r\n      this.state.mobno,\r\n      this.state.blockchainaddress,\r\n    ).send({\r\n      from: accounts[0]\r\n    })\r\n    this.setState({\r\n      name: \"\",\r\n      selectBloodgrp: \"\",\r\n      dob: \"\",\r\n      email: \"\",\r\n      mobno: \"\",\r\n      adharno: \"\",\r\n      blockchainaddress: \"\",\r\n      address: \"\",\r\n      zip: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n    });\r\n\r\n      \r\n    } catch (error) {\r\n      this.setState({errorMessage: error.message, hidden:false});\r\n      \r\n    }\r\n  this.setState({loading:false})\r\n  }\r\n\r\n  isFormValid = () => {\r\n    const {\r\n      name,\r\n     selectBloodgrp,\r\n     dob,\r\n     email,\r\n     mobno ,\r\n     adharno,\r\n     blockchainaddress,\r\n     address ,\r\n     zip,\r\n     state,\r\n     country,\r\n     } =  this.state\r\n  \r\n     console.log(\"in button\");\r\n    return name && selectBloodgrp && dob && email && mobno && adharno && blockchainaddress && address && zip && state && country\r\n   }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-reg-form-pat\">\r\n        <Form className=\"reg-form-pat\" action='' onSubmit={this.handleSubmit}>\r\n          <h2>Patient Registration</h2>\r\n          <hr />\r\n          <Form>\r\n            <Form.Field\r\n              id='form-input-control-name'\r\n              name=\"name\"\r\n              control={Input}\r\n              label='Name'\r\n              placeholder='Full Name'\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </Form>\r\n          <Form.Group width='equals'>\r\n            <label className='fieldcss'>\r\n              Blood Group\r\n            <select required id=\"dropdown-2\" onChange={this.handleDropdownChange}>\r\n                <option value=\"N/A\">N/A</option>\r\n                <option value=\"A+\">A+</option>\r\n                <option value=\"A-\">A-</option>\r\n                <option value=\"B+\">B+</option>\r\n                <option value=\"B-\">B-</option>\r\n                <option value=\"AB+\">AB+</option>\r\n                <option value=\"AB-\">AB-</option>\r\n                <option value=\"O+\">O+</option>\r\n                <option value=\"O-\">O-</option>\r\n              </select>\r\n            </label>\r\n\r\n            <div className=\"fieldcss\">\r\n              <label>Date of Birth\r\n            <input\r\n                  id='dob'\r\n                  name=\"dob\"\r\n                  type=\"date\"\r\n                  placeholder='dd-mm-yyyy'\r\n                  value={this.state.dob}\r\n                  onChange={this.handleChange} />\r\n              </label>\r\n            </div>\r\n          </Form.Group>\r\n          <Form.Field\r\n            id='form-input-control-error-email'\r\n            name=\"email\"\r\n            control={Input}\r\n            label='Email'\r\n            placeholder='joe@example.com'\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            width={10}\r\n            required\r\n          />\r\n          <Form.Field\r\n            id='mobno'\r\n            name='mobno'\r\n            control={Input}\r\n            label='Mobile no.'\r\n            placeholder='Mobile no.'\r\n            value={this.state.mobno}\r\n            onChange={this.handleChange}\r\n            required\r\n            width={10}\r\n          />\r\n          <Form.Field\r\n            id='adharno'\r\n            name='adharno'\r\n            control={Input}\r\n            label='Adhar no.'\r\n            placeholder='Adhar no.'\r\n            value={this.state.adharno}\r\n            onChange={this.handleChange}\r\n            required\r\n            width={10}\r\n          />\r\n          <Form.Field\r\n            id='blockchainaddress'\r\n            name='blockchainaddress'\r\n            control={Input}\r\n            label='Blockchain Address'\r\n            placeholder='Blockchain Address'\r\n            value={this.state.blockchainaddress}\r\n            onChange={this.handleChange}\r\n            required\r\n            width={10}\r\n          />\r\n\r\n          <Form.Field\r\n            id='address'\r\n            name='address'\r\n            control={Input}\r\n            label='Address'\r\n            placeholder='Address'\r\n            value={this.state.address}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <Form.Group>\r\n            <Form.Field\r\n              id='Zip Code'\r\n              name='zip'\r\n              control={Input}\r\n              label='Zip Code'\r\n              placeholder='Zip Code'\r\n              value={this.state.zip}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <Form.Field\r\n              id='state'\r\n              name='state'\r\n              control={Input}\r\n              label='State'\r\n              placeholder='State'\r\n              value={this.state.state}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <Form.Field\r\n              id='Country'\r\n              name='country'\r\n              control={Input}\r\n              label='Country'\r\n              placeholder='Country'\r\n              value={this.state.country}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Button primary onClick = {this.handleSubmit} disabled={!this.isFormValid()} loading ={this.state.loading} > Submit</Button>\r\n          \r\n        </Form>\r\n        <Message error header=\"Oops!\" content={this.state.errorMessage} hidden = {this.state.hidden}  negetive compact/>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PatientRegisteration;","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\Login\\Login.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\ViewData\\ViewData.js",["96","97","98","99"],"import React, { Component } from 'react'\r\nimport { FaUser, FaAddressCard, FaNotesMedical, FaKey } from 'react-icons/fa'\r\nimport './viewdata.css'\r\nimport web3 from '../../../ethereum/web3'\r\nimport Admin from '../../../ethereum/Admin'\r\nimport {\r\n    patientDetails,\r\n    rwAccess\r\n} from '../../Eth/Ethutil'\r\nimport { TiTick } from 'react-icons/ti'\r\nimport { ImCross } from 'react-icons/im'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\n\r\nclass ViewData extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mno: '',\r\n            bg: '',\r\n            r: <ImCross />,\r\n            rw: <ImCross />,\r\n            show: false,\r\n            url:''\r\n        }\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(this.props.location.myCustomProps\r\n        );\r\n        const { nme, mno, bg } = await patientDetails(this.props.location.myCustomProps.patient)\r\n        const { read, write } = await rwAccess(this.props.location.myCustomProps.pId, this.props.location.myCustomProps.dAddr)\r\n\r\n\r\n        if (read === true) {\r\n            this.setState({ r: <TiTick size=\"2em\" /> })\r\n        }\r\n        if (write === true) {\r\n            this.setState({ rw: <TiTick size=\"2em\" /> })\r\n        }\r\n        const url = 'https://ipfs.io/ipfs/' + this.props.location.myCustomProps.hash\r\n\r\n        this.setState({\r\n            mno,\r\n            bg,\r\n            url\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleClose = () => this.setState({ show: false })\r\n    handleShow = () => this.setState({ show: true })\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"viewdata\">\r\n                <div className=\"\">\r\n                    <h1>View Patient's Data</h1>\r\n                    <div className=\"patient-cards\">\r\n\r\n                        <div class=\"ui cards\">\r\n                            <div className=\"card\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-1\"><FaUser size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\">\r\n                                            <h2>{this.props.location.myCustomProps.pName}</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-2\"><FaAddressCard size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\">\r\n                                            <h4>{this.state.mno}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-3\"><FaNotesMedical size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\"><h4>Blood Group : {this.state.bg}</h4></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 access-1\">\r\n                                            <FaKey size='4em' color='white' className=\"faicons\" />\r\n                                        </div>\r\n                                        <div className=\"col-8 access-2\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"read-write\">\r\n                                                    Read &nbsp; {this.state.r} <br />\r\n                                                         Write &nbsp; {this.state.rw}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"displayform\">\r\n                    <div className=\"container\">\r\n                        <div>\r\n\r\n                            <h4>Details</h4>\r\n                            <p><h5>Remark:</h5>  {this.props.location.myCustomProps.details}\r\n                            </p>\r\n                            <p><h5>Date:</h5>  {this.props.location.myCustomProps.date}\r\n                            </p>\r\n                            <h4>Patient blockchain address</h4>\r\n                            <p>{this.props.location.myCustomProps.pId}</p>\r\n\r\n                            <div>\r\n                                <h4>File</h4>\r\n                                <Button variant=\"primary\" onClick={this.handleShow}>\r\n                                   SHOW PRESCRIPTION\r\n                                    </Button>\r\n\r\n\r\n                                <Modal show={this.state.show} onHide={this.handleClose} size = 'lg'>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>PRESCRIPTION</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                    <iframe src= {this.state.url} style={{width:'500%' ,height:'500px'}} className = 'img-fluid'frameBorder=\"0\"></iframe>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                         </Button>\r\n                                       \r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n\r\n\r\n\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewData;\r\n","E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\viewToDoctor\\viewToDoctor.js",["100"],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\AddPatientData\\AddPatientData.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\Header.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Footer\\Footer.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\AccesstoDoctor\\AccesstoDoctor.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\PatientFullDetail\\FullDetail.js",["101","102"],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderPatients.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderDoctor.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderAdmin.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\utils\\Eth\\Ethutil.js",[],"E:\\PPM3\\Blockchain-in-healthcare\\src\\ipfs.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":56,"column":11,"nodeType":"109","messageId":"110","endLine":56,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":12},{"ruleId":"107","severity":1,"message":"112","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":13},{"ruleId":"107","severity":1,"message":"113","line":35,"column":17,"nodeType":"109","messageId":"110","endLine":35,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":142,"column":37,"nodeType":"116","endLine":142,"endColumn":145},{"ruleId":"114","severity":1,"message":"115","line":203,"column":16,"nodeType":"116","endLine":203,"endColumn":126},{"ruleId":"107","severity":1,"message":"117","line":9,"column":49,"nodeType":"109","messageId":"110","endLine":9,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":202,"column":16,"nodeType":"116","endLine":202,"endColumn":126},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'patient' is assigned a value but never used.","Identifier","unusedVar","'web3' is defined but never used.","'Admin' is defined but never used.","'nme' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'FaKey' is defined but never used.","no-global-assign","no-unsafe-negation"]