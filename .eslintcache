[{"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/index.js":"1","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/reportWebVitals.js":"2","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/App.js":"3","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/Login/Login.js":"4","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/Header.js":"5","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/UserReg/UserReg.js":"6","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Footer/Footer.js":"7","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/SearchDoc/SearchDoc.js":"8","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/SearchPatient/SearchPatient.js":"9","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/AddPatientData/AddPatientData.js":"10","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/PatientRegisteration/PatientRegisteration.js":"11","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/History/history.js":"12","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/DoctorRegisteration/DoctorRegisteration.js":"13","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ethereum/Admin.js":"14","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ethereum/web3.js":"15","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Eth/Ethutil.js":"16"},{"size":633,"mtime":1618989432552,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1618989455467,"results":"19","hashOfConfig":"18"},{"size":1325,"mtime":1619708307843,"results":"20","hashOfConfig":"18"},{"size":1392,"mtime":1618990115149,"results":"21","hashOfConfig":"18"},{"size":1253,"mtime":1619708307855,"results":"22","hashOfConfig":"18"},{"size":817,"mtime":1619708307855,"results":"23","hashOfConfig":"18"},{"size":1379,"mtime":1619488816734,"results":"24","hashOfConfig":"18"},{"size":2167,"mtime":1619757838953,"results":"25","hashOfConfig":"18"},{"size":2099,"mtime":1619488816738,"results":"26","hashOfConfig":"18"},{"size":4496,"mtime":1619711152732,"results":"27","hashOfConfig":"18"},{"size":5839,"mtime":1619758853116,"results":"28","hashOfConfig":"18"},{"size":4302,"mtime":1619708307855,"results":"29","hashOfConfig":"18"},{"size":6526,"mtime":1619800032584,"results":"30","hashOfConfig":"18"},{"size":171,"mtime":1619711855552,"results":"31","hashOfConfig":"18"},{"size":483,"mtime":1595525255163,"results":"32","hashOfConfig":"18"},{"size":1577,"mtime":1619800651887,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"lxknxq",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/index.js",[],["69","70"],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/reportWebVitals.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/App.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/Login/Login.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Header/Header.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/UserReg/UserReg.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Components/Footer/Footer.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/SearchDoc/SearchDoc.js",["71","72"],"import React from 'react';\nimport {FormControl,Button,InputGroup,Table} from 'react-bootstrap'\nimport './searchdoc.css'\nimport web3 from '../../../ethereum/web3'\nimport Admin from '../../../ethereum/Admin'\n\nclass SearchDoc extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n    \n      handleSubmit(event) {\n        alert('searching');\n        console.log(this.state)\n        event.preventDefault();\n        this.setState({value: ''});\n      }\n\n    render(){\n\n    return (\n        <div className=\"search-doc-main\">\n            <div className=\"search-container\">\n                <h1>Find a Doctor</h1>\n                <h3>Search a doctor in your location</h3>\n                <InputGroup className=\"mb-4\">\n                    <FormControl\n                    placeholder=\"Enter a City\"\n                    aria-label=\"city name\"\n                    value = {this.state.value}\n                    onChange = {this.handleChange}\n                />\n                <InputGroup.Append>\n                    <Button variant=\"success\" onClick={this.handleSubmit}>Search</Button>\n                </InputGroup.Append>\n                </InputGroup>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Email</th>\n                        <th>Mobile No.</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        </tr>\n                    </tbody>\n                 </Table>   \n            </div>\n        </div>\n    )\n}\n}\nexport default SearchDoc;","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/SearchPatient/SearchPatient.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/AddPatientData/AddPatientData.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/PatientRegisteration/PatientRegisteration.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/History/history.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Containers/DoctorRegisteration/DoctorRegisteration.js",["73","74"],"import React from 'react'\nimport './doctorregisteration.css'\nimport { Form, Input } from 'semantic-ui-react'\nimport web3 from '../../../ethereum/web3'\nimport Admin from '../../../ethereum/Admin'\nimport {connectToPatients,\n  connectToDoctor,\n  addToPatients,\n  addToDoctor,\n  doctorDetails,\n  patientDetails\n} from '../../Eth/Ethutil'\n\nclass DoctorRegisteration extends React.Component{\n\n constructor(props) {\n   super(props);\n   this.state = {\n    name: '',\n   selectBloodgrp : \"\",\n   dob : \"\",\n   email: \"\",\n   mobno : \"\",\n   adharno: \"\",\n   identity : \"\",\n   blockchainaddress: '',\n   address : \"\",\n   zip: \"\",\n   state: \"\",\n   country: \"\",\n   };\n\n   this.handleChange = this.handleChange.bind(this);\n   this.handleSubmit = this.handleSubmit.bind(this);\n   this.handleDropdownChange = this.handleDropdownChange.bind(this);\n }\n async componentDidMount(){\n  const accounts = await web3.eth.getAccounts(); \n  const dExist = await Admin.methods.existD(accounts[0]).call()\n  const pExist = await Admin.methods.existP(accounts[0]).call()\n  console.log(dExist,pExist );\n\n  if(dExist){\n    const dAddr = await addToDoctor(accounts[0])\n    console.log('dAddr',dAddr);\n    const {nme,mno,id} =  await doctorDetails(dAddr)\n    console.log('details',nme,mno,id);\n  }\n\n  if(pExist){\n    const pAddr = await addToPatients(accounts[0])\n    console.log('pAddr',pAddr);\n    const {nme,mno,bg} = await patientDetails(pAddr)\n    console.log('details',nme,mno,bg);\n  }\n\n\n }\n\n handleChange(event) {\n   const target = event.target;\n   const value = target.value;\n   const name = target.name;\n\n   this.setState({\n    [name]: value\n  });\n }\n\n handleDropdownChange(e) {\n  this.setState({ \n    selectBloodgrp: e.target.value,\n    selectGender: e.target.value\n  });\n}\n\n\n async handleSubmit(event) {\n  event.preventDefault();\n   console.log(this.state)\n   const accounts = await web3.eth.getAccounts(); \n   \n   await Admin.methods.addDoctor(\n     this.state.name,\n     this.state.adharno,\n     this.state.mobno,\n     this.state.blockchainaddress,\n     this.state.identity\n   ).send({\n    from: accounts[0]\n   })\n   this.setState({\n   name:\"\",\n   selectBloodgrp : \"\",\n   dob : \"\",\n   email: \"\",\n   mobno : \"\",\n   adharno: '',\n   identity : \"\",\n   blockchainaddress: \"\",\n   address : \"\",\n   zip: \"\",\n   state: \"\",\n   country: \"\",\n   });\n   \n }\n\n\n render(){\n    return(\n      <div className=\"main-reg-form\">\n      <Form className=\"reg-form\" action='' onSubmit={this.handleSubmit}>\n        <h2>Doctor Registration</h2>\n        <hr />\n        <Form.Field\n             id='form-input-control-name'\n             name=\"name\"\n             control={Input}\n             label='Name'\n             placeholder='Full Name'\n             value = {this.state.name}\n             onChange = {this.handleChange}\n             required\n           />\n          <Form.Group width='equals'>\n          <label className='fieldcss'>\n            Blood Group\n            <select id=\"dropdown-2\" onChange={this.handleDropdownChange}>\n              <option value=\"N/A\">N/A</option>\n              <option value=\"A+\">A+</option>\n              <option value=\"A-\">A-</option>\n              <option value=\"B+\">B+</option>\n              <option value=\"B-\">B-</option>\n              <option value=\"AB+\">AB-</option>\n              <option value=\"AB-\">AB-</option>\n              <option value=\"O+\">O+</option>\n              <option value=\"O-\">O-</option>\n            </select>\n          </label>   \n          \n          <div className=\"fieldcss\">\n          <label>Date of Birth\n            <input\n             id='dob'\n            name=\"dob\"\n             type=\"date\" \n             placeholder='dd-mm-yyyy'\n             value = {this.state.dob}\n            onChange = {this.handleChange}/>\n            </label>\n          </div>\n        </Form.Group>  \n        <Form.Field\n          id='form-input-control-error-email'\n          name=\"email\"\n          control={Input}\n          label='Email'\n          placeholder='joe@example.com'\n          value = {this.state.email}\n            onChange = {this.handleChange}\n          width={10}\n          required\n        />\n        <Form.Field\n          id='mobno'\n          name='mobno'\n          control={Input}\n          label='Mobile no.'\n          placeholder='Mobile no.'\n          value = {this.state.mobno}\n            onChange = {this.handleChange}\n          required\n          width={10}\n        />\n        <Form.Field\n          id='adharno'\n          name='adharno'\n          control={Input}\n          label='Adhar No.'\n          placeholder='Adhar no.'\n          value = {this.state.adharno}\n            onChange = {this.handleChange}\n          required\n          width={10}\n        />\n        <Form.Field\n          id='identity'\n          name='identity'\n          control={Input}\n          label='Identity No.'\n          placeholder='Identity no.'\n          value = {this.state.identity}\n            onChange = {this.handleChange}\n          required\n          width={10}\n        />\n        <Form.Field\n          id='blockchainaddress'\n          name='blockchainaddress'\n          control={Input}\n          label='Blockchain Address'\n          placeholder='Blockchain Address'\n          value = {this.state.blockchainaddress}\n            onChange = {this.handleChange}\n          required\n          width={10}\n        />\n       <Form.Field\n          id='address'\n          name='address'\n          control={Input}\n          label='Address'\n          placeholder='Address'\n          value = {this.state.address}\n            onChange = {this.handleChange}\n          required\n        />\n        <Form.Group>\n        <Form.Field\n          id='Zip Code'\n          name='zip'\n          control={Input}\n          label='Zip Code'\n          placeholder='Zip Code'\n          value = {this.state.zip}\n            onChange = {this.handleChange}\n          required\n        />\n        <Form.Field\n          id='state'\n          name='state'\n          control={Input}\n          label='State'\n          placeholder='State'\n          value = {this.state.state}\n            onChange = {this.handleChange}\n         required\n       />\n       <Form.Field\n         id='Country'\n         name='country'\n         control={Input}\n         label='Country'\n         placeholder='Country'\n         value = {this.state.country}\n            onChange = {this.handleChange}\n         required\n       />\n       </Form.Group>\n       <br />\n       <input type=\"submit\" value=\"Submit\" className='btn-submit'/>\n\n     </Form>\n     </div>\n   )\n}\n}\nexport default DoctorRegisteration;","/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ethereum/Admin.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/ethereum/web3.js",[],"/home/sourav/Documents/Programming/Blockchain-in-healthcare/src/utils/Eth/Ethutil.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":12},{"ruleId":"79","severity":1,"message":"83","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":13},{"ruleId":"79","severity":1,"message":"84","line":6,"column":9,"nodeType":"81","messageId":"82","endLine":6,"endColumn":26},{"ruleId":"79","severity":1,"message":"85","line":7,"column":3,"nodeType":"81","messageId":"82","endLine":7,"endColumn":18},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'web3' is defined but never used.","Identifier","unusedVar","'Admin' is defined but never used.","'connectToPatients' is defined but never used.","'connectToDoctor' is defined but never used.","no-global-assign","no-unsafe-negation"]