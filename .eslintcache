[{"E:\\react\\Blockchain-in-healthcare\\src\\index.js":"1","E:\\react\\Blockchain-in-healthcare\\src\\reportWebVitals.js":"2","E:\\react\\Blockchain-in-healthcare\\src\\App.js":"3","E:\\react\\Blockchain-in-healthcare\\src\\ethereum\\web3.js":"4","E:\\react\\Blockchain-in-healthcare\\src\\ethereum\\Admin.js":"5","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Footer\\Footer.js":"6","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\UserReg\\UserReg.js":"7","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\AddPatientData\\AddPatientData.js":"8","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\History\\history.js":"9","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\DoctorRegisteration\\DoctorRegisteration.js":"10","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\Login\\Login.js":"11","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\ViewData\\ViewData.js":"12","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\viewToDoctor\\viewToDoctor.js":"13","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientRegisteration\\PatientRegisteration.js":"14","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderAdmin.js":"15","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderDoctor.js":"16","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderPatients.js":"17","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\AccesstoDoctor\\AccesstoDoctor.js":"18","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\PatientFullDetail\\FullDetail.js":"19","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\Header.js":"20","E:\\react\\Blockchain-in-healthcare\\src\\ipfs.js":"21","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Eth\\Ethutil.js":"22","E:\\react\\Blockchain-in-healthcare\\src\\utils\\contact\\contactus.js":"23"},{"size":655,"mtime":1621516949480,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1621516949495,"results":"26","hashOfConfig":"25"},{"size":3147,"mtime":1624433994879,"results":"27","hashOfConfig":"25"},{"size":488,"mtime":1621518230203,"results":"28","hashOfConfig":"25"},{"size":179,"mtime":1621518230203,"results":"29","hashOfConfig":"25"},{"size":1416,"mtime":1621858883864,"results":"30","hashOfConfig":"25"},{"size":850,"mtime":1621518230243,"results":"31","hashOfConfig":"25"},{"size":10846,"mtime":1621518230224,"results":"32","hashOfConfig":"25"},{"size":7441,"mtime":1624431841840,"results":"33","hashOfConfig":"25"},{"size":7795,"mtime":1624431237667,"results":"34","hashOfConfig":"25"},{"size":2230,"mtime":1622829450144,"results":"35","hashOfConfig":"25"},{"size":6942,"mtime":1621518230243,"results":"36","hashOfConfig":"25"},{"size":5466,"mtime":1621518230248,"results":"37","hashOfConfig":"25"},{"size":7005,"mtime":1624431195462,"results":"38","hashOfConfig":"25"},{"size":1222,"mtime":1621518230214,"results":"39","hashOfConfig":"25"},{"size":1196,"mtime":1621518230214,"results":"40","hashOfConfig":"25"},{"size":1201,"mtime":1621518230224,"results":"41","hashOfConfig":"25"},{"size":10990,"mtime":1621518230238,"results":"42","hashOfConfig":"25"},{"size":6355,"mtime":1624432354914,"results":"43","hashOfConfig":"25"},{"size":1260,"mtime":1624434366424,"results":"44","hashOfConfig":"25"},{"size":140,"mtime":1621518230203,"results":"45","hashOfConfig":"25"},{"size":2230,"mtime":1621518230248,"results":"46","hashOfConfig":"25"},{"size":3938,"mtime":1624434135609,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"hpf4nd",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\Blockchain-in-healthcare\\src\\index.js",[],["97","98"],"E:\\react\\Blockchain-in-healthcare\\src\\reportWebVitals.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\App.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\ethereum\\web3.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\ethereum\\Admin.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Footer\\Footer.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\UserReg\\UserReg.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\AddPatientData\\AddPatientData.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\History\\history.js",["99","100","101"],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\DoctorRegisteration\\DoctorRegisteration.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\Login\\Login.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\ViewData\\ViewData.js",["102","103","104","105"],"import React, { Component } from 'react'\r\nimport { FaUser, FaAddressCard, FaNotesMedical, FaKey } from 'react-icons/fa'\r\nimport './viewdata.css'\r\nimport web3 from '../../../ethereum/web3'\r\nimport Admin from '../../../ethereum/Admin'\r\nimport {\r\n    patientDetails,\r\n    rwAccess\r\n} from '../../Eth/Ethutil'\r\nimport { TiTick } from 'react-icons/ti'\r\nimport { ImCross } from 'react-icons/im'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\n\r\nclass ViewData extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mno: '',\r\n            bg: '',\r\n            r: <ImCross />,\r\n            rw: <ImCross />,\r\n            show: false,\r\n            url:''\r\n        }\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(this.props.location.myCustomProps\r\n        );\r\n        const { nme, mno, bg } = await patientDetails(this.props.location.myCustomProps.patient)\r\n        const { read, write } = await rwAccess(this.props.location.myCustomProps.pId, this.props.location.myCustomProps.dAddr)\r\n\r\n\r\n        if (read === true) {\r\n            this.setState({ r: <TiTick size=\"2em\" /> })\r\n        }\r\n        if (write === true) {\r\n            this.setState({ rw: <TiTick size=\"2em\" /> })\r\n        }\r\n        const url = 'https://ipfs.io/ipfs/' + this.props.location.myCustomProps.hash\r\n\r\n        this.setState({\r\n            mno,\r\n            bg,\r\n            url\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleClose = () => this.setState({ show: false })\r\n    handleShow = () => this.setState({ show: true })\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"viewdata\">\r\n                <div className=\"\">\r\n                    <h1>View Patient's Data</h1>\r\n                    <div className=\"patient-cards\">\r\n\r\n                        <div class=\"ui cards\">\r\n                            <div className=\"card\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-1\"><FaUser size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\">\r\n                                            <h2>{this.props.location.myCustomProps.pName}</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-2\"><FaAddressCard size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\">\r\n                                            <h4>{this.state.mno}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-3\"><FaNotesMedical size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\"><h4>Blood Group : {this.state.bg}</h4></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 access-1\">\r\n                                            <FaKey size='4em' color='white' className=\"faicons\" />\r\n                                        </div>\r\n                                        <div className=\"col-8 access-2\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"read-write\">\r\n                                                    Read &nbsp; {this.state.r} <br />\r\n                                                         Write &nbsp; {this.state.rw}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"displayform\">\r\n                    <div className=\"container\">\r\n                        <div>\r\n\r\n                            <h4>Details</h4>\r\n                            <p><h5>Remark:</h5>  {this.props.location.myCustomProps.details}\r\n                            </p>\r\n                            <p><h5>Date:</h5>  {this.props.location.myCustomProps.date}\r\n                            </p>\r\n                            <h4>Patient blockchain address</h4>\r\n                            <p>{this.props.location.myCustomProps.pId}</p>\r\n\r\n                            <div>\r\n                                <h4>File</h4>\r\n                                <Button variant=\"primary\" onClick={this.handleShow}>\r\n                                   SHOW PRESCRIPTION\r\n                                    </Button>\r\n\r\n\r\n                                <Modal show={this.state.show} onHide={this.handleClose} size = 'lg'>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>PRESCRIPTION</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                    <iframe src= {this.state.url} style={{width:'500%' ,height:'500px'}} className = 'img-fluid'frameBorder=\"0\"></iframe>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                         </Button>\r\n                                       \r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n\r\n\r\n\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewData;\r\n","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\viewToDoctor\\viewToDoctor.js",["106"],"import React, { Component } from 'react'\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport { Paper } from '@material-ui/core';\r\nimport { FaUser, FaAddressCard, FaNotesMedical } from 'react-icons/fa'\r\nimport './viewToDoctor.css'\r\nimport web3 from '../../../ethereum/web3'\r\nimport Admin from '../../../ethereum/Admin'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nimport {\r\n\tconnectToPatients,\r\n\tconnectToDoctor,\r\n\taddToPatients,\r\n\tpatientDetails,\r\n} from '../../Eth/Ethutil'\r\n\r\n\r\n\r\nclass viewToDoctor extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\taccount: '',\r\n\t\t\tnme: '',\r\n\t\t\tmno: '',\r\n\t\t\tbg: '',\r\n\t\t\trecord: [],\r\n\t\t\tfinalObj: [],\r\n\t\t\tshow: false,\r\n\t\t\turl:''\r\n\t\t}\r\n\r\n\r\n\r\n\t\tthis.handleClose = this.handleClose.bind(this);\r\n\t\tthis.handleShow = this.handleShow.bind(this);\r\n\t}\r\n\r\n\thandleClose = () => this.setState({ show: false })\r\n\thandleShow = (event,hash) => {\r\n\t\tevent.preventDefault()\r\n\t\tconst url = 'https://ipfs.io/ipfs/'+ hash\r\n\t\tthis.setState({ show: true , url})}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst accounts = await web3.eth.getAccounts();\r\n        const pId = this.props.location.myCustomProps.value\r\n\t\t\r\n\t\tconst pExist = await Admin.methods.existP(pId).call()\r\n\t\tif (!pExist) {\r\n\t\t\talert(\"Patients does not exist on this address\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst pAddr = await addToPatients(pId)\r\n\t\t\tconst { nme, mno, bg } = await patientDetails(pAddr)\r\n\r\n\t\t\tconst patient = await connectToPatients(pAddr)\r\n\t\t\t\r\n\t\t\tconst len = await patient.methods.getLength().call({\r\n\t\t\t\tfrom: accounts[0]\r\n\t\t\t})\r\n\r\n\t\t\tlet record = []\r\n\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\r\n\t\t\t\tconst temp = await patient.methods.getReport(i).call({\r\n\t\t\t\t\tfrom: accounts[0]\r\n\t\t\t\t})\r\n\t\t\t\tlet obj = {\r\n\t\t\t\t\tdate: temp[0],\r\n\t\t\t\t\tdoctor: temp[1],\r\n\t\t\t\t\tdetail: temp[2],\r\n\t\t\t\t\thash: temp[3]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trecord.push(obj)\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet temp = []\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\r\n\t\t\t\tconst doctor = await connectToDoctor(record[i].doctor);\r\n\r\n\t\t\t\tconst dId = await doctor.methods.owner().call();\r\n\r\n\t\t\t\tconst dName = await doctor.methods.name().call();\r\n\r\n\t\t\t\tconst date = this.uToTime(record[i].date)\r\n\r\n\t\t\t\tconst obj = {\r\n\t\t\t\t\tdName,\r\n\t\t\t\t\tdId,\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\tdetails: record[i].detail,\r\n\t\t\t\t\thash:record[i].hash,\r\n\t\t\t\t}\r\n\t\t\t\t  temp =  [...temp, obj]\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tnme,\r\n\t\t\t\tmno,\r\n\t\t\t\tbg,\r\n\t\t\t\taccount: accounts[0],\r\n\t\t\t\trecord,\r\n\t\t\t\tfinalObj: temp\r\n\t\t\t})\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tuToTime(t) {\r\n\t\tconst milliseconds = t * 1000\r\n\t\tconst dateObject = new Date(milliseconds)\r\n\t\tconst humanDateFormat = dateObject.toLocaleString()\r\n\t\tconst arr = humanDateFormat.split(',')\r\n\t\treturn arr[0]\r\n\t}\r\n\r\n\ttoHtm(){\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst paperstyle = {\r\n\t\t\tpadding: '8px 5px',\r\n\t\t\ttextAlign: 'center',\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"stages-main\">\r\n\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-4\">\r\n\t\t\t\t\t\t\t<div class=\"card-counter primary\">\r\n\t\t\t\t\t\t\t\t<FaUser className='fa-icons' />\r\n\t\t\t\t\t\t\t\t<span class=\"count-name\">{this.state.nme}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"col-md-4\">\r\n\t\t\t\t\t\t\t<div class=\"card-counter success\">\r\n\t\t\t\t\t\t\t\t<FaAddressCard className='fa-icons' />\r\n\t\t\t\t\t\t\t\t<span class=\"count-name\">{this.state.mno}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"col-md-4\">\r\n\t\t\t\t\t\t\t<div class=\"card-counter danger\">\r\n\t\t\t\t\t\t\t\t<FaNotesMedical className='fa-icons' />\r\n\t\t\t\t\t\t\t\t<span class=\"count-name\">{this.state.bg}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"stages\">\r\n\t\t\t\t\t\t<Timeline align=\"alternate\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.state.finalObj.map((rec,index) =>{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(rec);\r\n\t\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t\t<TimelineItem key ={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TimelineSeparator>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TimelineDot color=\"primary\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TimelineConnector />\r\n\t\t\t\t\t\t\t\t\t\t\t</TimelineSeparator>\r\n\t\t\t\t\t\t\t\t\t\t\t<TimelineContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Paper elevation={3} style={paperstyle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDate : {rec.date} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDetails: {rec.details} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDoctor: {rec.dName} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDoctor ID : {rec.dId} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={(event) => this.handleShow(event,rec.hash)} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tView Document\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t\t</TimelineContent>\r\n\t\t\t\t\t\t\t\t\t\t</TimelineItem>\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<Modal show={this.state.show} onHide={this.handleClose} size='lg'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Title>PRESCRIPTION</Modal.Title>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe src={this.state.url} style={{ width: '500%', height: '500px' }} className='img-fluid' frameBorder=\"0\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={this.handleClose}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </Button>\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t</Timeline>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default viewToDoctor;","E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientRegisteration\\PatientRegisteration.js",["107"],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderAdmin.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderDoctor.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderPatients.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\AccesstoDoctor\\AccesstoDoctor.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\PatientFullDetail\\FullDetail.js",["108","109"],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\Header.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\ipfs.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\Eth\\Ethutil.js",[],"E:\\react\\Blockchain-in-healthcare\\src\\utils\\contact\\contactus.js",["110","111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":12,"column":12,"nodeType":"119","messageId":"120","endLine":12,"endColumn":21},{"ruleId":"117","severity":1,"message":"121","line":12,"column":23,"nodeType":"119","messageId":"120","endLine":12,"endColumn":26},{"ruleId":"117","severity":1,"message":"122","line":12,"column":28,"nodeType":"119","messageId":"120","endLine":12,"endColumn":31},{"ruleId":"117","severity":1,"message":"123","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"117","severity":1,"message":"124","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":13},{"ruleId":"117","severity":1,"message":"125","line":35,"column":17,"nodeType":"119","messageId":"120","endLine":35,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":142,"column":37,"nodeType":"128","endLine":142,"endColumn":145},{"ruleId":"126","severity":1,"message":"127","line":203,"column":16,"nodeType":"128","endLine":203,"endColumn":126},{"ruleId":"117","severity":1,"message":"129","line":56,"column":11,"nodeType":"119","messageId":"120","endLine":56,"endColumn":18},{"ruleId":"117","severity":1,"message":"130","line":9,"column":47,"nodeType":"119","messageId":"120","endLine":9,"endColumn":54},{"ruleId":"126","severity":1,"message":"127","line":211,"column":16,"nodeType":"128","endLine":211,"endColumn":126},{"ruleId":"131","severity":1,"message":"132","line":55,"column":21,"nodeType":"128","endLine":55,"endColumn":112},{"ruleId":"131","severity":1,"message":"132","line":67,"column":21,"nodeType":"128","endLine":67,"endColumn":113},{"ruleId":"131","severity":1,"message":"132","line":79,"column":21,"nodeType":"128","endLine":79,"endColumn":113},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'web3' is defined but never used.","'Admin' is defined but never used.","'nme' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'patient' is assigned a value but never used.","'FaUsers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]