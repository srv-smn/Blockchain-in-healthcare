[{"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\ethereum\\Admin.js":"4","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\ethereum\\web3.js":"5","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\contact\\contactus.js":"6","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\UserReg\\UserReg.js":"7","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\AddPatientData\\AddPatientData.js":"8","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\Login\\Login.js":"9","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientRegisteration\\PatientRegisteration.js":"10","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\History\\history.js":"11","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\ViewData\\ViewData.js":"12","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\viewToDoctor\\viewToDoctor.js":"13","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\DoctorRegisteration\\DoctorRegisteration.js":"14","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\Header.js":"15","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderAdmin.js":"16","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderPatients.js":"17","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderDoctor.js":"18","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\AccesstoDoctor\\AccesstoDoctor.js":"19","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Footer\\Footer.js":"20","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\PatientFullDetail\\FullDetail.js":"21","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\ipfs.js":"22","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Eth\\Ethutil.js":"23"},{"size":655,"mtime":1624851744429,"results":"24","hashOfConfig":"25"},{"size":3147,"mtime":1624851835061,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1624851744429,"results":"27","hashOfConfig":"25"},{"size":179,"mtime":1624851835079,"results":"28","hashOfConfig":"25"},{"size":488,"mtime":1624851835079,"results":"29","hashOfConfig":"25"},{"size":3941,"mtime":1624854792070,"results":"30","hashOfConfig":"25"},{"size":850,"mtime":1624851835099,"results":"31","hashOfConfig":"25"},{"size":14661,"mtime":1624974415107,"results":"32","hashOfConfig":"25"},{"size":2412,"mtime":1625032721785,"results":"33","hashOfConfig":"25"},{"size":7115,"mtime":1624851835099,"results":"34","hashOfConfig":"25"},{"size":9794,"mtime":1624975295762,"results":"35","hashOfConfig":"25"},{"size":8967,"mtime":1624977536091,"results":"36","hashOfConfig":"25"},{"size":6328,"mtime":1625030596137,"results":"37","hashOfConfig":"25"},{"size":7921,"mtime":1624851835082,"results":"38","hashOfConfig":"25"},{"size":1260,"mtime":1624851835080,"results":"39","hashOfConfig":"25"},{"size":1223,"mtime":1624851835080,"results":"40","hashOfConfig":"25"},{"size":1201,"mtime":1624851835081,"results":"41","hashOfConfig":"25"},{"size":1196,"mtime":1624851835080,"results":"42","hashOfConfig":"25"},{"size":11136,"mtime":1625032628656,"results":"43","hashOfConfig":"25"},{"size":1416,"mtime":1624851744429,"results":"44","hashOfConfig":"25"},{"size":7452,"mtime":1625030900638,"results":"45","hashOfConfig":"25"},{"size":140,"mtime":1624851835079,"results":"46","hashOfConfig":"25"},{"size":2350,"mtime":1624851835099,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"xbuwj9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\index.js",[],["99","100"],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\ethereum\\Admin.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\ethereum\\web3.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\contact\\contactus.js",["101","102","103"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './contactus.css'\r\nimport contact from './../../assets/contact.jpg'\r\n\r\nexport default function ContactPage() {\r\n    return (\r\n            <div class=\"contact3 py-5\">\r\n  <div class=\"row no-gutters\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"card-shadow\">\r\n            <img src={contact} class=\"img-fluid\" alt=\"contact-img\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"contact-box ml-3\">\r\n            <h1 class=\"font-weight-light mt-2\">Quick Contact</h1>\r\n            <form class=\"mt-4\">\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group mt-2\">\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"name\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group mt-2\">\r\n                    <input class=\"form-control\" type=\"email\" placeholder=\"email address\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group mt-2\">\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"phone\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group mt-2\">\r\n                    <textarea class=\"form-control\" rows=\"3\" placeholder=\"message\"></textarea>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-12\">\r\n                  <button type=\"submit\" class=\"btn btn-danger-gradiant mt-3 text-white border-0 px-3 py-2\"><span> SUBMIT</span></button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"card mt-4 border-0 mb-4\">\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-4 col-md-4\">\r\n                <div class=\"card-body d-flex align-items-center c-detail pl-0\">\r\n                  <div class=\"mr-3 align-self-center\">\r\n                    <img src=\"https://www.wrappixel.com/demos/ui-kit/wrapkit/assets/images/contact/icon1.png\"/>\r\n                  </div>\r\n                  <div class=\"\">\r\n                    <h6 class=\"font-weight-medium\">Address</h6>\r\n                    <p class=\"\">601 Sherwood Ave.\r\n                      <br/> San Bernandino</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-4\">\r\n                <div class=\"card-body d-flex align-items-center c-detail\">\r\n                  <div class=\"mr-3 align-self-center\">\r\n                    <img src=\"https://www.wrappixel.com/demos/ui-kit/wrapkit/assets/images/contact/icon2.png\" />\r\n                  </div>\r\n                  <div class=\"\">\r\n                    <h6 class=\"font-weight-medium\">Phone</h6>\r\n                    <p class=\"\">251 546 9442\r\n                      <br /> 630 446 8851</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-4\">\r\n                <div class=\"card-body d-flex align-items-center c-detail\">\r\n                  <div class=\"mr-3 align-self-center\">\r\n                    <img src=\"https://www.wrappixel.com/demos/ui-kit/wrapkit/assets/images/contact/icon3.png\" />\r\n                  </div>\r\n                  <div class=\"\">\r\n                    <h6 class=\"font-weight-medium\">Email</h6>\r\n                    <p class=\"\">\r\n                      info@wrappixel.com\r\n                      <br /> 123@wrappixel.com\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    )\r\n}","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\UserReg\\UserReg.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\AddPatientData\\AddPatientData.js",["104"],"import React, { Component } from 'react'\r\nimport { Form,TextArea, Message,Button, Input,Radio } from 'semantic-ui-react'\r\nimport {FormControl,InputGroup, Container, Row, Col} from 'react-bootstrap'\r\nimport { FaUser,FaAddressCard,FaNotesMedical, FaKey } from 'react-icons/fa'\r\nimport hospital from './../../../assets/hospital.png'\r\nimport {TiTick} from 'react-icons/ti'\r\nimport {ImCross} from 'react-icons/im'\r\nimport './addpatientdata.css'\r\nimport web3 from '../../../ethereum/web3'\r\nimport Admin from '../../../ethereum/Admin'\r\nimport {\r\n  connectToDoctor,\r\n  addToPatients,\r\n  addToDoctor,\r\n  patientDetails,\r\n  rwAccess\r\n} from '../../Eth/Ethutil' ;\r\n\r\nimport ipfs from '../../../ipfs'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass AddPatientData extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading:false,\r\n            sloading:false,\r\n            errorMessage:'',\r\n            hidden:true, \r\n            condition: '',   \r\n          name:'',\r\n          mno:'',\r\n          bg:'',\r\n          remark:'',\r\n          bp: 'NA',\r\n          nextdate:'NA',\r\n          selectedFile: null,\r\n          count:0,\r\n          value:'',\r\n          r : <ImCross />,\r\n          rw : <ImCross />,\r\n          account:'',\r\n          disabled:true,\r\n          pCAddr:''\r\n        };\r\n        \r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeSearch = this.handleChangeSearch.bind(this);\r\n        this.handleSubmitSearch = this.handleSubmitSearch.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n       // this.handleSubmitShow = this.handleSubmitShow.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.handleRadio = this.handleRadio.bind(this);\r\n      }\r\n    \r\n\r\n      viewHtml(){\r\n          return(\r\n              <div className=\"view-elements\">\r\n                \r\n            <div class=\"ui cards\">\r\n            <div className=\"card ml-3 mr-3\">\r\n                  <div className=\"container\">\r\n                      <div className=\"row\">\r\n                          <div className=\"col-4 detail-1\"><FaUser size='4em' color='white' className=\"faicons\"/></div>\r\n                          <div className=\"col-8 card-content\">\r\n                              <h2>{this.state.name}</h2>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"card ml-4 mr-4\">\r\n                  <div className=\"container\">\r\n                      <div className=\"row\">\r\n                          <div className=\"col-4 detail-2\"><FaAddressCard size='4em' color='white' className=\"faicons\"/></div>\r\n                          <div className=\"col-8 card-content\">\r\n                              <h4>{this.state.mno}<br />\r\n                              </h4>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n              <div className=\"card ml-4 mr-4\">\r\n                  <div className=\"container\">\r\n                      <div className=\"row\">\r\n                          <div className=\"col-4 detail-3\"><FaNotesMedical size='4em' color='white' className=\"faicons\"/></div>\r\n                          <div className=\"col-8 card-content\"><h4>Blood Group : {this.state.bg}</h4></div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n              <div className=\"card ml-4 mr-4\">\r\n                  <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-4 access-1\">\r\n                        <FaKey size='4em' color='white' className=\"faicons\"/>\r\n                      </div>  \r\n                      <div className=\"col-8 access-2\">  \r\n                        <div className=\"row\">\r\n                            <div className=\"read-write\">\r\n                            Read &nbsp; {this.state.r} <br />\r\n                            Write &nbsp; {this.state.rw}\r\n                            </div>\r\n                       </div>\r\n                      </div>   \r\n                    </div>\r\n                  </div>\r\n              </div>\r\n             \r\n              </div> \r\n              \r\n              <div className=\"patient-form\">\r\n              <h1>Basic Information</h1>\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">        \r\n                    <Form unstackable>\r\n                    <Form.Field\r\n                        id = 'disease'\r\n                        name='disease'\r\n                        control={Input}\r\n                        label='Disease/Injury'\r\n                        placeholder='Disease/Injury'\r\n                        value = {this.state.disease}\r\n                        onChange = {this.handleChange}\r\n                        required='required'/>\r\n\r\n                        <Form.Field\r\n                        id = 'remark'\r\n                        name='remark'\r\n                        control={TextArea}\r\n                        label='Description'\r\n                        placeholder='Description'\r\n                        value = {this.state.remark}\r\n                        onChange = {this.handleChange}\r\n                        required='required'/>\r\n\r\n                        <Form.Group widths=\"equal\">\r\n                         <Form.Field\r\n                         className=\"mb-3\"\r\n                        id = 'bp'\r\n                        name='bp'\r\n                        control={Input}\r\n                        label='Blood Pressure'\r\n                        placeholder='Blood Pressure'\r\n                        value = {this.state.bp}\r\n                        onChange = {this.handleChange}\r\n                       />\r\n\r\n                       <label>Next Appointment Date\r\n                        <input\r\n                             className=\"mb-3\"\r\n                            id='nextdate'\r\n                            name=\"nextdate\"\r\n                            type=\"date\"\r\n                            placeholder='dd-mm-yyyy'\r\n                            value={this.state.nextdate}\r\n                            onChange={this.handleChange} />\r\n                        </label>\r\n                        </Form.Group>\r\n\r\n                        <div className=\"mb-3\" onChange={this.handleRadio}>\r\n                            <label className=\"mb-2\">Report Type </label>\r\n                            <input type=\"radio\" value=\"Pathology Report\" name=\"condition\" /> Pathology Report &nbsp;\r\n                            <input type=\"radio\" value=\"Consultation\" name=\"condition\" /> Consultation &nbsp;\r\n                            <input type=\"radio\" value=\"Operative Report (OP)\" name=\"condition\" /> Operative Report (OP) &nbsp;\r\n                            <input type=\"radio\" value=\"Discharge Summary (DS)\" name=\"condition\" /> Discharge Summary (DS) &nbsp;\r\n                            <input type=\"radio\" value=\"Radiology Report\" name=\"condition\" /> Radiology Report &nbsp;     \r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"file\" onChange={this.onFileChange} required/>\r\n                        </div>\r\n                        <br />\r\n                        <div style={{textAlign:\"center\"}}>\r\n                        <Button className=\"mr-5 mb-2\" type='submit' color='green' onClick={this.handleSubmit} disabled={!this.isFormValid()} loading ={this.state.loading}>Submit</Button>\r\n                        \r\n                        <Link to = {\r\n                                                    { \r\n                                                        pathname: \"/viewtodoctor\",\r\n                                                        myCustomProps: {value:this.state.value}\r\n                                                    }\r\n                                                }>\r\n                    <Button primary className=\"mr-5 mb-2\" onClick={this.handleSubmitShow} >Previos Record</Button>\r\n                    \r\n                    </Link>\r\n                    <Message error header=\"Oops!\" content={this.state.errorMessage} hidden = {this.state.hidden}  negetive compact/>\r\n                    </div>\r\n                    </Form>\r\n                </div>\r\n                </div>\r\n            </div> \r\n              </div>\r\n              \r\n         )\r\n      }\r\n\r\n async componentDidMount(){\r\n        const accounts = await web3.eth.getAccounts();\r\n        const dExist = await Admin.methods.existD(accounts[0]).call()\r\n        if(!dExist)\r\n        alert(\"Doctor does not exist on this address\");\r\n        this.setState({\r\n          account:accounts[0]\r\n        })\r\n      }\r\n\r\n      async handleSubmitSearch(event) {\r\n        this.setState({sloading:true})\r\n        event.preventDefault();\r\n        \r\n        console.log(this.state.value)\r\n        let pExist = false;\r\n        if(web3.utils.checkAddressChecksum(this.state.value)){\r\n          pExist = await Admin.methods.existP(this.state.value).call()\r\n        }\r\n\r\n        if(!pExist)\r\n        {\r\n          alert(\"Patients does not exist on this address\");\r\n        }\r\n        else{\r\n          const pAddr = await addToPatients(this.state.value);\r\n          this.setState({\r\n            pCAddr: pAddr\r\n          })\r\n          const {nme,mno,bg} = await patientDetails(pAddr)\r\n          this.setState({\r\n            name:nme,\r\n            mno,\r\n            bg,\r\n            count:1,\r\n          })\r\n        }\r\n        let r,rw\r\n\r\n        if(pExist){\r\n          let{read,write} =  await rwAccess(this.state.value, this.state.account)\r\n          r = read\r\n          rw = write\r\n        }\r\n        console.log(r,rw)\r\n\r\n        if(r===true){\r\n            this.setState({r: <TiTick size=\"2em\"/>})\r\n        }\r\n        if(rw===true){\r\n            this.setState({rw: <TiTick size=\"2em\"/>})\r\n        }\r\n        this.setState({sloading:false})\r\n        window.scrollTo(0, 700);\r\n      }\r\n      handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n        console.log(value)\r\n      }\r\n      handleChangeSearch(event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n    \r\n      onFileChange = event => {\r\n\r\n        event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => {\r\n      this.setState({ selectedFile: Buffer(reader.result) })\r\n      console.log('buffer', this.state.selectedFile)\r\n    }\r\n      };\r\n\r\n      handleRadio(event) {\r\n        console.log(event.target.value);\r\n        this.setState({condition: event.target.value})\r\n      }\r\n\r\n      async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({loading:true})\r\n        // Create an object of formData\r\n      const formData = new FormData();\r\n    \r\n      // Update the formData object\r\n      formData.append(\r\n        \"myFile\",\r\n        this.state.selectedFile\r\n      );\r\n    \r\n      if(this.state.remark==='' && this.state.selectedFile===null){\r\n          alert(\"Please enter the File and Description\")\r\n      }\r\n      // Details of the uploaded file\r\n        //  console.log(this.state.selectedFile);\r\n        //  console.log(this.state.remark)\r\n        //  console.log(this.state.disease)\r\n        //  console.log(this.state.bp)\r\n        //  console.log(this.state.nextdate)\r\n        //  console.log(this.state.condition)\r\n          \r\n        let description = this.state.disease +\"$\"+ this.state.remark +\"$\"+ this.state.bp +\"$\"+ this.state.nextdate +\"$\"+ this.state.condition;\r\n        console.log(description)\r\n        console.log(this.state.selectedFile)\r\n        \r\n        \r\n\r\n\r\n         try{\r\n          const ipfsUpload =  await ipfs.files.add(this.state.selectedFile)\r\n          console.log(typeof ipfsUpload[0].hash);\r\n          const hash = ipfsUpload[0].hash\r\n          const dAddr = await addToDoctor(this.state.account);\r\n          console.log(1);\r\n          const doctor = await connectToDoctor(dAddr)\r\n          console.log(2);\r\n          console.log(doctor);\r\n          await doctor.methods.addPatientRecord(\r\n            description,\r\n            hash,\r\n            this.state.pCAddr\r\n          ).send({\r\n            from:this.state.account\r\n        })\r\n        console.log(3);\r\n         }\r\n        catch (error) {\r\n            this.setState({errorMessage: error.message, hidden:false});            \r\n        }\r\n       \r\n         this.setState({\r\n            disease: '',\r\n           remark:'',\r\n           selectedFile: null,\r\n           condition:'',\r\n           bp:'',\r\n           nextdate:'',\r\n           loading:false\r\n         });\r\n      }\r\n    \r\n      isFormValid = () => {\r\n        const {\r\n            remark,\r\n            selectedFile,\r\n         } =  this.state\r\n      \r\n         console.log(\"in button\");\r\n        return remark && selectedFile\r\n       }  \r\n\r\n       isSearchValid = () => {\r\n        const {\r\n          value\r\n         } =  this.state\r\n      \r\n        return value\r\n       }\r\n      \r\n\r\n    render() {\r\n      \r\n        let viewCond;\r\n        if(this.state.count !== 0){\r\n            viewCond = this.viewHtml()\r\n        }\r\n        return (\r\n            <div>\r\n            <div className=\"add-patient-main\">\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col sm={4}><img src={hospital} class=\"img-fluid\" alt=\"contact-img\"/> </Col>\r\n                        <Col className=\"py-5 mt-5\">\r\n                            <h1 className=\"greet\" style={{color: 'white', fontSize: '50px'}}>Welcome, hope you are good !!!</h1>\r\n                            <InputGroup>\r\n                            <FormControl\r\n                            className=\"mb-5\"\r\n                            placeholder=\"Enter Blockchain address\"\r\n                            aria-label=\"city name\"\r\n                            value = {this.state.value}\r\n                            onChange = {this.handleChangeSearch}\r\n                            />\r\n                            </InputGroup>\r\n                            <Button color='yellow' onClick={this.handleSubmitSearch} loading ={this.state.sloading} disabled={!this.isSearchValid()}>Search</Button>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n               \r\n                \r\n            </div>\r\n\r\n                {viewCond}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddPatientData;","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\Login\\Login.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientRegisteration\\PatientRegisteration.js",["105"],"import React from 'react'\r\nimport './patientregisteration.css'\r\nimport { Form, Input, Button,Message,Container } from 'semantic-ui-react'\r\nimport web3 from '../../../ethereum/web3'\r\nimport Admin from '../../../ethereum/Admin'\r\n\r\nclass PatientRegisteration extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading:false,\r\n      errorMessage:'',\r\n      hidden:true,\r\n      name: \"\",\r\n      selectBloodgrp: \"\",\r\n      dob: \"\",\r\n      email: \"\",\r\n      mobno: \"\",\r\n      adharno: \"\",\r\n      blockchainaddress: \"\",\r\n      address: \"\",\r\n      zip: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleDropdownChange(e) {\r\n    this.setState({\r\n      selectBloodgrp: e.target.value,\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({loading:true})\r\n\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n    const patient = await Admin.methods.addPatient(\r\n      this.state.name,\r\n      this.state.dob,\r\n      this.state.adharno,\r\n      this.state.selectBloodgrp,\r\n      this.state.mobno,\r\n      this.state.blockchainaddress,\r\n    ).send({\r\n      from: accounts[0]\r\n    })\r\n    this.setState({\r\n      name: \"\",\r\n      selectBloodgrp: \"\",\r\n      dob: \"\",\r\n      email: \"\",\r\n      mobno: \"\",\r\n      adharno: \"\",\r\n      blockchainaddress: \"\",\r\n      address: \"\",\r\n      zip: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n    });\r\n\r\n      \r\n    } catch (error) {\r\n      this.setState({errorMessage: error.message, hidden:false});\r\n      \r\n    }\r\n  this.setState({loading:false})\r\n  }\r\n\r\n  isFormValid = () => {\r\n    const {\r\n      name,\r\n     selectBloodgrp,\r\n     dob,\r\n     email,\r\n     mobno ,\r\n     adharno,\r\n     blockchainaddress,\r\n     address ,\r\n     zip,\r\n     state,\r\n     country,\r\n     } =  this.state\r\n  \r\n     console.log(\"in button\");\r\n    return name && selectBloodgrp && dob && email && mobno && adharno && blockchainaddress && address && zip && state && country\r\n   }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-reg-form-pat\">\r\n        <Form className=\"reg-form-pat\" action='' onSubmit={this.handleSubmit}>\r\n          <h2>Patient Registration</h2>\r\n          <hr />\r\n          <Form>\r\n            <Form.Field\r\n              id='form-input-control-name'\r\n              name=\"name\"\r\n              control={Input}\r\n              label='Name'\r\n              placeholder='Full Name'\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </Form>\r\n          <Form.Group width='equals'>\r\n            <label className='fieldcss'>\r\n              Blood Group\r\n            <select required id=\"dropdown-2\" onChange={this.handleDropdownChange}>\r\n                <option value=\"N/A\">N/A</option>\r\n                <option value=\"A+\">A+</option>\r\n                <option value=\"A-\">A-</option>\r\n                <option value=\"B+\">B+</option>\r\n                <option value=\"B-\">B-</option>\r\n                <option value=\"AB+\">AB+</option>\r\n                <option value=\"AB-\">AB-</option>\r\n                <option value=\"O+\">O+</option>\r\n                <option value=\"O-\">O-</option>\r\n              </select>\r\n            </label>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <div className=\"fieldcss\">\r\n              <label>Date of Birth\r\n            <input\r\n                  id='dob'\r\n                  name=\"dob\"\r\n                  type=\"date\"\r\n                  placeholder='dd-mm-yyyy'\r\n                  value={this.state.dob}\r\n                  onChange={this.handleChange} />\r\n              </label>\r\n            </div>\r\n          </Form.Group>\r\n          <Form.Field\r\n            id='form-input-control-error-email'\r\n            name=\"email\"\r\n            control={Input}\r\n            label='Email'\r\n            placeholder='joe@example.com'\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            width={10}\r\n            required\r\n          />\r\n          <Form.Field\r\n            id='mobno'\r\n            name='mobno'\r\n            control={Input}\r\n            label='Mobile no.'\r\n            placeholder='Mobile no.'\r\n            value={this.state.mobno}\r\n            onChange={this.handleChange}\r\n            required\r\n            width={10}\r\n          />\r\n          <Form.Field\r\n            id='adharno'\r\n            name='adharno'\r\n            control={Input}\r\n            label='Adhar no.'\r\n            placeholder='Adhar no.'\r\n            value={this.state.adharno}\r\n            onChange={this.handleChange}\r\n            required\r\n            width={10}\r\n          />\r\n          <Form.Field\r\n            id='blockchainaddress'\r\n            name='blockchainaddress'\r\n            control={Input}\r\n            label='Blockchain Address'\r\n            placeholder='Blockchain Address'\r\n            value={this.state.blockchainaddress}\r\n            onChange={this.handleChange}\r\n            required\r\n            width={10}\r\n          />\r\n\r\n          <Form.Field\r\n            id='address'\r\n            name='address'\r\n            control={Input}\r\n            label='Address'\r\n            placeholder='Address'\r\n            value={this.state.address}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <Form.Group>\r\n            <Form.Field\r\n              id='Zip Code'\r\n              name='zip'\r\n              control={Input}\r\n              label='Zip Code'\r\n              placeholder='Zip Code'\r\n              value={this.state.zip}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <Form.Field\r\n              id='state'\r\n              name='state'\r\n              control={Input}\r\n              label='State'\r\n              placeholder='State'\r\n              value={this.state.state}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <Form.Field\r\n              id='Country'\r\n              name='country'\r\n              control={Input}\r\n              label='Country'\r\n              placeholder='Country'\r\n              value={this.state.country}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <div style={{textAlign:\"center\"}}>\r\n          <Button primary onClick = {this.handleSubmit}  disabled={!this.isFormValid()} loading ={this.state.loading} > Submit</Button>\r\n          </div>\r\n        </Form>\r\n        <Container style={{textAlign:\"center\", marginTop:'20px'}}>\r\n        <Message error header=\"Oops!\" content={this.state.errorMessage} hidden = {this.state.hidden}  negetive compact/>\r\n     </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PatientRegisteration;","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\History\\history.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\ViewData\\ViewData.js",["106","107","108","109","110"],"import React, { Component } from 'react'\r\nimport { FaUser, FaAddressCard, FaNotesMedical, FaKey } from 'react-icons/fa'\r\nimport './viewdata.css'\r\nimport web3 from '../../../ethereum/web3'\r\nimport Admin from '../../../ethereum/Admin'\r\nimport {\r\n    patientDetails,\r\n    rwAccess\r\n} from '../../Eth/Ethutil'\r\nimport { TiTick } from 'react-icons/ti'\r\nimport { ImCross } from 'react-icons/im'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\n\r\nclass ViewData extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mno: '',\r\n            bg: '',\r\n            r: <ImCross />,\r\n            rw: <ImCross />,\r\n            show: false,\r\n            url:''\r\n        }\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        if(this.props.location.myCustomProps.pName == \"undefined\"){\r\n           return window.location = '/doctorhistory';\r\n        }\r\n        console.log(this.props.location.myCustomProps\r\n        );\r\n        const { nme, mno, bg } = await patientDetails(this.props.location.myCustomProps.patient)\r\n        const { read, write } = await rwAccess(this.props.location.myCustomProps.pId, this.props.location.myCustomProps.dAddr)\r\n\r\n\r\n        if (read === true) {\r\n            this.setState({ r: <TiTick size=\"2em\" /> })\r\n        }\r\n        if (write === true) {\r\n            this.setState({ rw: <TiTick size=\"2em\" /> })\r\n        }\r\n        const url = 'https://ipfs.io/ipfs/' + this.props.location.myCustomProps.hash\r\n\r\n        this.setState({\r\n            mno,\r\n            bg,\r\n            url\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleClose = () => this.setState({ show: false })\r\n    handleShow = () => this.setState({ show: true })\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"viewdata\">\r\n                <div>\r\n                    <p style={{fontSize:'30px', marginBottom:'25px', marginLeft:'10px'}}>Patient's Data</p>\r\n                    <div className=\"patient-cards\">\r\n\r\n                        <div class=\"ui cards container-fluid\">\r\n                            <div className=\"card ml-4 mr-4\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-1\"><FaUser size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\">\r\n                                            <h2>{this.props.location.myCustomProps.pName}</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card ml-4 mr-4\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-2\"><FaAddressCard size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\">\r\n                                            <h4>{this.state.mno}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card ml-4 mr-4\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 detail-3\"><FaNotesMedical size='4em' color='white' className=\"faicons\" /></div>\r\n                                        <div className=\"col-8 card-content\"><h4>Blood Group : {this.state.bg}</h4></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card ml-4 mr-4\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 access-1\">\r\n                                            <FaKey size='4em' color='white' className=\"faicons\" />\r\n                                        </div>\r\n                                        <div className=\"col-8 access-2\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"read-write\">\r\n                                                    Read &nbsp; {this.state.r} <br />\r\n                                                         Write &nbsp; {this.state.rw}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <p style={{fontSize:'30px', marginTop:'40px', marginLeft:'10px'}}>Report Information</p>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"mt-2 col-xl-4 col-md-12\">\r\n                    <div className='card card-box py-3' >\r\n                        <div className=\"display-form\">\r\n                            <h3>Basic Information</h3>\r\n                            <hr />\r\n                            <p><b>Date:</b>  {this.props.location.myCustomProps.date}\r\n                            </p>\r\n                            <h4>Patient blockchain address</h4>\r\n                            <p>{this.props.location.myCustomProps.pId}</p>  \r\n                            </div>\r\n                            </div>\r\n                    </div>\r\n\r\n                     <div className=\"mt-2 col-xl-4 col-md-12\">\r\n                     <div className='card card-box py-3'>\r\n                        <div className=\"display-form\">    \r\n                            <h3>Health Details</h3>\r\n                            <hr/>\r\n                            <p><b>Disease/Injury : </b>  {this.props.location.myCustomProps.details.split(\"$\")[0]}\r\n                            </p>\r\n                            <p><b>Description :</b> {this.props.location.myCustomProps.details.split(\"$\")[1]}\r\n                            </p>\r\n                            <p><b>Blood Pressure : </b> {this.props.location.myCustomProps.details.split(\"$\")[2]}\r\n                            </p>\r\n                        </div>\r\n                        </div>        \r\n                        </div>\r\n                        \r\n                        <div className=\"mt-2 col-xl-4 col-md-12\">\r\n                        <div className='card card-box py-3' >\r\n                        <div className=\"display-form\">\r\n                            <h3>Report</h3><hr/>\r\n                            <p><b>Report Type :</b> {this.props.location.myCustomProps.details.split(\"$\")[4]}\r\n                            </p><br/>\r\n                            <div>\r\n                                <p><b>Next Appointment Date :</b> {this.props.location.myCustomProps.details.split(\"$\")[3]}\r\n                                </p>\r\n                                        \r\n                            </div> \r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{textAlign:'center'}}>\r\n                    <Button variant=\"primary\" onClick={this.handleShow}>\r\n                                   SHOW PRESCRIPTION\r\n                                    </Button>\r\n\r\n\r\n                                <Modal show={this.state.show} onHide={this.handleClose} size = 'lg'>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>PRESCRIPTION</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                    <iframe src= {this.state.url} style={{width:'500%' ,height:'500px'}} className = 'img-fluid'frameBorder=\"0\"></iframe>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                         </Button>\r\n                                       \r\n                                    </Modal.Footer>\r\n                                </Modal> \r\n                        </div>        \r\n                    </div>\r\n                </div>\r\n\r\n\r\n         \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewData;\r\n","C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\viewToDoctor\\viewToDoctor.js",["111"],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\DoctorRegisteration\\DoctorRegisteration.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\Header.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderAdmin.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderPatients.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Header\\HeaderDoctor.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\AccesstoDoctor\\AccesstoDoctor.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Components\\Footer\\Footer.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Containers\\PatientSide\\PatientFullDetail\\FullDetail.js",["112"],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\ipfs.js",[],"C:\\Users\\hp\\Desktop\\React_2020\\Blockchain-in-healthcare\\src\\utils\\Eth\\Ethutil.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":55,"column":21,"nodeType":"119","endLine":55,"endColumn":112},{"ruleId":"117","severity":1,"message":"118","line":67,"column":21,"nodeType":"119","endLine":67,"endColumn":113},{"ruleId":"117","severity":1,"message":"118","line":79,"column":21,"nodeType":"119","endLine":79,"endColumn":113},{"ruleId":"120","severity":1,"message":"121","line":2,"column":47,"nodeType":"122","messageId":"123","endLine":2,"endColumn":52},{"ruleId":"120","severity":1,"message":"124","line":56,"column":11,"nodeType":"122","messageId":"123","endLine":56,"endColumn":18},{"ruleId":"120","severity":1,"message":"125","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":12},{"ruleId":"120","severity":1,"message":"126","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":33,"column":52,"nodeType":"129","messageId":"130","endLine":33,"endColumn":54},{"ruleId":"120","severity":1,"message":"131","line":38,"column":17,"nodeType":"122","messageId":"123","endLine":38,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":179,"column":37,"nodeType":"119","endLine":179,"endColumn":145},{"ruleId":"132","severity":1,"message":"133","line":222,"column":10,"nodeType":"119","endLine":222,"endColumn":120},{"ruleId":"132","severity":1,"message":"133","line":233,"column":16,"nodeType":"119","endLine":233,"endColumn":126},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Radio' is defined but never used.","Identifier","unusedVar","'patient' is assigned a value but never used.","'web3' is defined but never used.","'Admin' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'nme' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]